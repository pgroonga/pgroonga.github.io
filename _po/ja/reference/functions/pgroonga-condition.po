msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"PO-Revision-Date: 2023-08-13 09:55+0900\n"

msgid ""
"---\n"
"title: pgroonga_condition function\n"
"upper_level: ../\n"
"---"
msgstr ""
"---\n"
"title: pgroonga_condition 関数\n"
"upper_level: ../\n"
"---"

msgid "# `pgroonga_condition()` function"
msgstr "# `pgroonga_condition()` 関数"

msgid "## Summary"
msgstr "## 概要"

msgid ""
"`pgroonga_condition()` function returns `pgroonga_condition` type value.\n"
"The function and the type have same name, but they are two different "
"things.\n"
"`pgroonga_condition` type represents complicated conditional expressions, "
"such as `pgroonga_full_text_search_condition` type and "
"`pgroonga_full_text_search_condition_with_scorers` type."
msgstr ""
"`pgroonga_condition()`関数は`pgroonga_condition`型の値を返します。\n"
"関数名と型名が同じですが別物です。\n"
"`pgroonga_condition`型は`pgroonga_full_text_search_condition`型や"
"`pgroonga_full_text_search_condition_with_scorers`型のように複雑な条件式を表"
"現します。"

msgid ""
"`pgroonga_condition()` function is a useful function to make the "
"`pgroonga_condition` type value.\n"
"It allows to make the `pgroonga_condition` type value by designating the "
"specific attribute values."
msgstr ""
"`pgroonga_condition()`関数は`pgroonga_condition`型の値を作るための便利関数で"
"す。\n"
"特定の属性値のみを指定して`pgroonga_condition`型の値を作れます。"

msgid ""
"There were not this kind of useful functions for "
"`pgroonga_full_text_search_condition` type and "
"`pgroonga_full_text_search_condition_with_scorers` type, so designating all "
"attribute values was necessary to make the value."
msgstr ""
"`pgroonga_full_text_search_condition`型や"
"`pgroonga_full_text_search_condition_with_scorers`型では、このような便利関数"
"がなかったため必ず全ての属性値を指定して値を作る必要がありました。"

msgid ""
"Therefore, you need to designate `NULL` for disused attribute value as "
"follows when `pgroonga_full_text_search_condition` type and "
"`pgroonga_full_text_search_condition_with_scorers` type are used to avoid "
"making all the values."
msgstr ""
"したがって、不要な属性値があっても、`pgroonga_full_text_search_condition`型や"
"`pgroonga_full_text_search_condition_with_scorers`型では、次のように不要な属"
"性値には`NULL`を指定する必要がありました。"

msgid ""
"```sql\n"
"title &@~ ('keyword', NULL, 'index_name')::"
"pgroonga_full_text_search_condition\n"
"title &@~ ('keyword', ARRAY[1,1,1,5,0], NULL, 'index_name')::"
"pgroonga_full_text_search_condition_with_scorers\n"
"```"
msgstr ""

msgid ""
"It was not possible for existing value creation methods to make new "
"attribute value while keeping backward compatibility.\n"
"Thus, it was necessary to add a new type every time when a new attribute "
"value is added, such as `pgroonga_full_text_search_condition_with_XXX` "
"type.\n"
"For example, `pgroogna_full_text_search_condition_with_scorers` type was "
"added because of the added new attribute."
msgstr ""
"型を指定して直接値を作る従来の方法では後方互換性を維持したまま新しい属性を作"
"ることができませんでした。\n"
"そのため、新しい属性を追加するたびに"
"`pgroonga_full_text_search_condition_with_XXX`というような新しい型を追加する"
"必要がありました。\n"
"たとえば、`pgroogna_full_text_search_condition_with_scorers`型はそのために追"
"加された型です。"

msgid ""
"The difference between `pgroonga_full_text_search_condition` type and "
"`pgroonga_full_text_search_condition_with_scorers` type is whether `scorers` "
"exist or not. If `scorers` is added to `pgroonga_full_text_search_condition` "
"type, every users are required to insert new `NULL` to make "
"`pgroonga_full_text_search_condition` type regardless of `scorers` usage."
msgstr ""
"`pgroonga_full_text_search_condition`型と"
"`pgroonga_full_text_search_condition_with_scorers`型の違いは`scorers`が存在す"
"るかどうかですが、`pgroonga_full_text_search_condition`型に`scorers`を追加し"
"てしまうと、`scorers`を使わないユーザーも新たに`NULL`を挿入して"
"`pgroonga_full_text_search_condition`型の値を作らなければなりません。"

msgid ""
"However, installing `pgroonga_condition()` function to make new "
"`pgroonga_condition` type value let a new attribute to be added while "
"keeping backward compatibility.\n"
"It is because `pgroonga_condition()` function absorbs incompatibility."
msgstr ""
"しかし、`pgroonga_condition`型の値を作るための便利関数`pgroonga_condition()`"
"関数を導入することにより後方互換性を維持したまま`pgroonga_condition`型に新し"
"い属性を追加できます。\n"
"`pgroonga_condition()`関数が非互換を吸収してくれるからです。"

msgid ""
"`pgroonga_condition()` function lets current writing style when a new "
"attribute value is added because the function can leave out unnecessary "
"attribute value as following sample.\n"
"(In the following sample, `weights`, `scorers`, `schema_name` and "
"`column_name` are left out. The details of attribute values would be noted "
"in next [\"Syntax\"](#syntax). Here, point is that possibility of leaving "
"out unnecessary attribute values.)"
msgstr ""
"次のように、`pgroonga_condition()`関数は不要な属性値を省略できるため、新たに"
"属性値が追加されても既存の書き方を維持できます。\n"
"(次の例では、`weights`、`scorers`、`schema_name`、`column_name`を省略していま"
"す。属性値の詳細については、後述の「構文」で記載します。ここでは、不要な属性"
"値が省略できることに注目してください。)"

msgid ""
"```sql\n"
"title &@~ pgroonga_condition('keyword', index_name => 'index_name')\n"
"```"
msgstr ""

msgid ""
"Please note that while using `pgroonga_condition()` function you can leave "
"out attribute values instead you need to describe comment like keyword "
"argument such as `index_name => 'index name'`."
msgstr ""
"`pgroonga_condition()`関数では、上のように属性値を省略できますが、代わりに、"
"「index_name => 'index name'」のようにキーワード引数のような記載が必要になる"
"ことに注意してください。"

msgid ""
"In the above sample, there are mix of attribute values which is like keyword "
"argument or not.\n"
"How to separate writing is going to be explained in next [\"Syntax\"]"
"(#syntax).\n"
"The point here is there is need of different writing from the current."
msgstr ""
"上の例では、キーワード引数のような書き方をしている属性値とそうでない属性値が"
"あります。\n"
"どのように書き分けるかについては、後述の「構文」で記載します。\n"
"ここでは、従来とは異なる書き方が必要になることがあるという点に注目してくださ"
"い。"

msgid "## Syntax"
msgstr "## 構文"

msgid "Here is the syntax of this function:"
msgstr "この関数の構文は次の通りです。"

msgid ""
"```\n"
"pgroonga_condition pgroonga_condition(keyword,\n"
"                                      weights,\n"
"                                      scorers,\n"
"                                      schema_name,\n"
"                                      index_name,\n"
"                                      column_name)\n"
"```"
msgstr ""

msgid "`keyword` is a keyword for full text search. It's `text` type."
msgstr "`keyword`は検索したいキーワードです。`text`型です。"

msgid "`weights` is importance factors of each value. It's `int[]` type."
msgstr "`weights`は、検索対象のカラムの重要度です。`int[]`型です。"

msgid ""
"`scorers` is [score compute procedures][scorer] of each value. It's `text[]` "
"type."
msgstr ""
"`scorers`は、検索対象のカラムのスコアーを計算する[スコアラー][scorer]です。"
"`text[]`型です。"

msgid ""
"`schema_name` is the schema to which the index that PGroonga refers to when "
"executing a sequential search belongs. It's `text` type."
msgstr ""
"`schema_name`は、シーケンシャルサーチ実行時に参照するインデックスが属するス"
"キーマです。`text`型です。"

msgid ""
"`index_name` is index which PGroonga refer to when executing sequential "
"search. It's `text` type."
msgstr ""
"`index_name`は、シーケンシャルサーチ実行時に参照するインデックスです。`text`"
"型です。"

msgid ""
"`column_name` is the column within the index which PGroonga refers to when "
"executing a sequential search. It's `text` type."
msgstr ""
"`column_name`は、シーケンシャルサーチ実行時に参照するインデックス内のカラムで"
"す。`text`型です"

msgid ""
"All arguments of `pgroonga_condition()` are optional. If you want to specify "
"a particular argument, you can use [Named Notation][sql-syntax-calling-funcs-"
"named] such as `name => value` without relying on its position. For example, "
"if you specify only `index_name` argument, you can write "
"`pgroonga_condition(index_name => 'index1')`."
msgstr ""
"`pgroonga_condition()`の引数はすべて省略可能です。引数の位置に依らずに、特定"
"の引数を指定したい場合は[`引数名 => 値`][sql-syntax-calling-funcs-named]とい"
"う名前付き表記が使えます。たとえば、引数に`index_name`だけ指定する場合は"
"`pgroonga_condition(index_name => 'index1')`となります。"

msgid "In general, it is enough to remember the following three cases."
msgstr "一般的なユースケースでは次の3種類の書き方を覚えておけば十分です。"

msgid ""
"```sql\n"
"pgroonga_condition('keyword', index_name => 'pgroonga_index')\n"
"pgroonga_condition('keyword', ARRAY[weight1, weight2, ...])\n"
"pgroonga_condition('keyword', ARRAY[weight1, weight2, ...], index_name => "
"'pgroonga_index')\n"
"```"
msgstr ""

msgid ""
"Please refer to [Calling Functions][sql-syntax-calling-funcs] for "
"information about the difference between when you need to write `name => "
"value` and when you don't."
msgstr ""
"上の例以外の使い方をする場合のために、`引数名 => 値`で記述する必要がある引数"
"とそうでない引数の違いについては、[関数呼び出し][sql-syntax-calling-funcs]を"
"参照してください。"

msgid "## Usage"
msgstr "## 使い方"

msgid "### Specify `index_name`"
msgstr ""

msgid ""
"シーケンシャルサーチ実行時でも、インデックスに指定したノーマライザーやトーク"
"ナイザーのオプションを使って検索する方法を紹介します。"
msgstr ""

msgid ""
"`pgroonga_condition('keyword', index_name => 'pgroonga_index')`を使います。\n"
"`index_name`にノーマライザーやトークナイザーを指定したインデックスの名前を指"
"定します。"
msgstr ""

msgid "Here are sample schema and data:"
msgstr ""

msgid ""
"```sql\n"
"CREATE TABLE tags (\n"
"  name text PRIMARY KEY\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_tag_name_index ON tags\n"
"  USING pgroonga (name pgroonga_text_term_search_ops_v2)\n"
"  WITH (normalizers='NormalizerNFKC150(\"remove_symbol\", true)');"
msgstr ""

msgid ""
"INSERT INTO tags VALUES ('PostgreSQL');\n"
"INSERT INTO tags VALUES ('Groonga');\n"
"INSERT INTO tags VALUES ('PGroonga');\n"
"INSERT INTO tags VALUES ('pglogical');\n"
"```"
msgstr ""

msgid ""
"インデックスサーチ時はインデックスに指定したオプションを使ってインデックス"
"サーチ時の挙動をカスタマイズできます。\n"
"上のサンプルでは、`normalizers='...'`の部分でオプションを指定しています。"
msgstr ""

msgid ""
"一方、インデックスサーチではなくシーケンシャルサーチが実行されると、インデッ"
"クスに指定されているオプションは参照できません。\n"
"シーケンシャルサーチ時はどのインデックスを参照すればよいかという情報がないか"
"らです。"
msgstr ""

msgid ""
"そのためシーケンシャルサーチ実行時は、インデックスサーチ実行時と検索結果が異"
"なる可能性があります。\n"
"この問題を回避するためにシーケンシャルサーチ時に参照するインデックスを明示的"
"に指定します。\n"
"`pgroonga_condition()`の`index_name => '...'`がそのための引数です。"
msgstr ""

msgid ""
"次の例は、「`_p_G`」というキーワードで前方一致検索をしており、インデックスに"
"は`NormalizerNFKC150(\"remove_symbol\", true)`が設定されています。\n"
"[`remove_symbol`][remove-symbol]は記号を無視するオプションなので、「`_p_G`」"
"は「`pg`」にノーマライズされます。\n"
"（大文字が小文字になっているのは、`remove_symbol`オプションの挙動ではなく、"
"`NormalizerNFKC150`のデフォルトの挙動によるものです。）\n"
"そのため、このオプションが有効であれば、「`PGroonga`」と「`pglogical`」がヒッ"
"トします。"
msgstr ""

msgid ""
"次の例は、シーケンシャルサーチですが、「`PGroonga`」と「`pglogical`」がヒット"
"していることが確認できます。\n"
"このことから、シーケンシャルサーチ実行時でもインデックスに設定されている"
"`NormalizerNFKC150(\"remove_symbol\", true)`が参照できていることが確認できま"
"す。"
msgstr ""

msgid ""
"```sql\n"
"EXPLAIN ANALYZE\n"
"SELECT *\n"
"  FROM tags\n"
" WHERE name &^ pgroonga_condition('_p_G',\n"
"                                  index_name => 'pgroonga_tag_name_index');\n"
"                                            QUERY PLAN\n"
"--------------------------------------------------------------------------------------------------\n"
" Seq Scan on tags  (cost=0.00..1043.60 rows=1 width=32) (actual "
"time=2.267..2.336 rows=2 loops=1)\n"
"   Filter: (name &^ '(_p_G,,,,pgroonga_tag_name_index,)'::"
"pgroonga_condition)\n"
"   Rows Removed by Filter: 2\n"
" Planning Time: 0.871 ms\n"
" Execution Time: 2.352 ms\n"
"(5 rows)"
msgstr ""

msgid ""
"SELECT *\n"
"  FROM tags\n"
" WHERE name &^ pgroonga_condition('_p_G',\n"
"                                  index_name => 'pgroonga_tag_name_index');\n"
"   name\n"
"-----------\n"
" PGroonga\n"
" pglogical\n"
"(2 rows)\n"
"```"
msgstr ""

msgid ""
"`index_name`を指定しない場合（つまり、`NormalizerNFKC150(\"remove_symbol\", "
"true)`が参照できない場合）は、次のように「`PGroonga`」と「`pglogical`」はヒッ"
"トしません。"
msgstr ""

msgid ""
"```sql\n"
"EXPLAIN ANALYZE\n"
"SELECT *\n"
"  FROM tags\n"
" WHERE name &^ pgroonga_condition('_p_G');\n"
"                                            QUERY PLAN\n"
"--------------------------------------------------------------------------------------------------\n"
" Seq Scan on tags  (cost=0.00..1043.60 rows=1 width=32) (actual "
"time=0.032..0.032 rows=0 loops=1)\n"
"   Filter: (name &^ '(_p_G,,,,,)'::pgroonga_condition)\n"
"   Rows Removed by Filter: 4\n"
" Planning Time: 0.910 ms\n"
" Execution Time: 0.053 ms\n"
"(5 rows)"
msgstr ""

msgid ""
"SELECT *\n"
"  FROM tags\n"
" WHERE name &^ pgroonga_condition('_p_G');"
msgstr ""

msgid ""
" name\n"
"------\n"
"(0 rows)\n"
"```"
msgstr ""

msgid ""
"このように、`index_name`を指定することで、シーケンシャルサーチ実行時でもイン"
"デックスサーチ実行時でも検索結果が変わらないようにできます。"
msgstr ""

msgid "### Specify `weights`"
msgstr ""

msgid ""
"カラム毎に異なるweight（重要度）を設定する方法を紹介します。\n"
"これにより、「タイトルを本文よりも重要視する」を実現できます。"
msgstr ""

msgid ""
"`pgroonga_condition('keyword', ARRAY[weight1, weight2, ...])` を使います。\n"
"`weight1`、 `weight2`でカラム毎の重要度を指定します。"
msgstr ""

msgid ""
"```sql\n"
"DROP TABLE IF EXISTS memos;\n"
"CREATE TABLE memos (\n"
"  title text,\n"
"  content text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_memos_index\n"
"    ON memos\n"
" USING pgroonga ((ARRAY[title, content]));"
msgstr ""

msgid ""
"INSERT INTO memos VALUES ('PostgreSQL', 'PostgreSQLはリレーショナル・データ"
"ベース管理システムです。');\n"
"INSERT INTO memos VALUES ('Groonga', 'Groongaは日本語対応の高速な全文検索エン"
"ジンです。');\n"
"INSERT INTO memos VALUES ('PGroonga', 'PGroongaはインデックスとしてGroongaを"
"使うためのPostgreSQLの拡張機能です。');\n"
"INSERT INTO memos VALUES ('コマンドライン', 'groongaコマンドがあります。');\n"
"```"
msgstr ""

msgid ""
"指定したクエリーによりマッチしたレコードを探すためには[`pgroonga_score "
"function`][pgroonga-score-function]を使えます。"
msgstr ""

msgid ""
"```sql\n"
"SELECT *, pgroonga_score(tableoid, ctid) AS score\n"
"  FROM memos\n"
" WHERE ARRAY[title, content] &@~\n"
"       pgroonga_condition('Groonga OR PostgreSQL', ARRAY[5, 1])\n"
" ORDER BY score DESC;\n"
"      title      |                                  "
"content                                  | score \n"
"----------------"
"+---------------------------------------------------------------------------"
"+-------\n"
" Groonga        | Groongaは日本語対応の高速な全文検索エンジンで"
"す。                         |     6\n"
" PostgreSQL     | PostgreSQLはリレーショナル・データベース管理システムで"
"す。                |     6\n"
" PGroonga       | PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの"
"拡張機能です。 |     2\n"
" コマンドライン | groongaコマンドがありま"
"す。                                               |     1\n"
"(4 rows)\n"
"```"
msgstr ""

msgid ""
"上の例では、`ARRAY[title, content] &@~ pgroonga_condition('Groonga OR "
"PostgreSQL', ARRAY[5, 1])`と指定しているので、タイトルが本文より5倍重要として"
"います。\n"
"`title`カラムに「`Groonga`」または「`PostgreSQL`」があるレコードの方が"
"`content`カラムに「`Groonga`」または「`PostgreSQL`」がある方よりスコアーが高"
"いことを確認できます。"
msgstr ""

msgid "### Exclude from search target"
msgstr ""

msgid "特定のカラムを検索対象から除外して検索する方法を紹介します。"
msgstr ""

msgid ""
"`pgroonga_condition('keyword', ARRAY[weight1, weight2, ...])`を使います。\n"
"検索対象から除外したいカラムに対応する`weight`に`0`を指定します。"
msgstr ""

msgid ""
"次の例では、`content`カラムを検索対象から除外しています。\n"
"「`拡張`」というキーワードで全文検索しているので、`content`カラムを検索対象と"
"していれば、`'PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張"
"機能です。'`がヒットするはずですが、このレコードはヒットしていません。\n"
"このことから、`content`カラムが検索対象から除外されていることを確認できます。"
msgstr ""

msgid ""
"```sql\n"
"SELECT *\n"
"  FROM memos\n"
" WHERE ARRAY[title, content] &@~\n"
"       pgroonga_condition('拡張', ARRAY[1, 0]);\n"
" title | content\n"
"-------+---------\n"
"(0 rows)\n"
"```"
msgstr ""

msgid ""
"次のように、`content`カラムを検索対象にすると`'PGroongaはインデックスとして"
"Groongaを使うためのPostgreSQLの拡張機能です。'`がヒットします。"
msgstr ""

msgid ""
"```sql\n"
"SELECT *\n"
"  FROM memos\n"
" WHERE ARRAY[title, content] &@~\n"
"       pgroonga_condition('拡張', ARRAY[1, 1]);\n"
"  title   |                                  content\n"
"----------"
"+---------------------------------------------------------------------------\n"
" PGroonga | PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機"
"能です。\n"
"(1 row)\n"
"```"
msgstr ""

msgid "## See also"
msgstr "## 参考"

msgid "* [Calling Functions][sql-syntax-calling-funcs]"
msgstr "* [関数呼び出し][sql-syntax-calling-funcs]"

msgid "* [Named Notation][sql-syntax-calling-funcs-named]"
msgstr "* [名前付け表記の使用][sql-syntax-calling-funcs-named]"

msgid "* [normalizers_mapping][normalizers-mapping]"
msgstr ""

msgid "* [pgroonga_score function][pgroonga-score-function]"
msgstr ""

msgid "* [postgres_fdw][postgres-fdw]"
msgstr ""

msgid "* [remove_symbol][remove-symbol]"
msgstr ""

msgid "* [score compute procedures][scorer]"
msgstr ""

msgid ""
"[sql-syntax-calling-funcs]:{{ site.postgresql_doc_base_url.en }}/sql-syntax-"
"calling-funcs.html"
msgstr ""

msgid ""
"[sql-syntax-calling-funcs-named]:{{ site.postgresql_doc_base_url.en }}/sql-"
"syntax-calling-funcs.html#SQL-SYNTAX-CALLING-FUNCS-NAMED"
msgstr ""

msgid ""
"[normalizers-mapping]:../create-index-using-pgroonga.html#custom-normalizer"
msgstr ""

msgid "[pgroonga-score-function]:pgroonga-score.html"
msgstr ""

msgid "[postgres-fdw]:{{ site.postgresql_doc_base_url.en }}/postgres-fdw.html"
msgstr ""

msgid ""
"[remove-symbol]:https://groonga.org/docs/reference/normalizers/"
"normalizer_nfkc150.html#remove-symbol"
msgstr ""

msgid "[scorer]:https://groonga.org/docs/reference/scorer.html"
msgstr ""
