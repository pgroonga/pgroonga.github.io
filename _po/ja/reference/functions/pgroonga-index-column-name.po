msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: pgroonga_index_column_name function\n"
"upper_level: ../\n"
"---"
msgstr ""
"---\n"
"title: pgroonga_index_column_name 関数\n"
"upper_level: ../\n"
"---"

msgid "# `pgroonga_index_column_name` function"
msgstr "# `pgroonga_index_column_name` 関数"

msgid "## Summary"
msgstr "## 概要"

msgid ""
"The indexes of PGroonga have been managed as a database of Groonga that is run"
"ning at the backend of PGroonga.\n"
"This function outputs the name of PGroonga's index on the database of Groonga."
msgstr ""
"PGroongaのインデックスは、PGroongaのバックエンドで動作しているGroongaのデータベースとして管理されています。\n"
"この関数は、Groongaのデータベース上のPGroongaのインデックスの名前を出力します。"

msgid ""
"It useful when we confirm the detail of the index by the `object_inspect` comm"
"and."
msgstr "これは、 `object_inspect` コマンドを使ってインデックスの詳細を確認したい時に便利です。"

msgid ""
"Normally, first of all, we get lists of tables on the database of Groonga by t"
"he `table_list` command."
msgstr "通常、まず最初に `table_list` コマンドを使ってGroongaのデータベース上のテーブルの一覧を取得します。"

msgid ""
"```sql\n"
"SELECT jsonb_pretty(pgroonga_command('table_list')::jsonb);\n"
"```"
msgstr ""

msgid ""
"A table beginning with a `Lexicon` in this list is a table for the index.\n"
"We can get information about the index by executing `object_inslect` by the na"
"me of this table."
msgstr ""
"このリストの中で、 `Lexicon` で始まるテーブルがインデックス用のテーブルです。\n"
"このテーブルの名前を使って、 `object_inspect` を実行することで、インデックスの情報を取得できます。"

msgid ""
"```sql\n"
"SELECT * FROM jsonb_each(((pgroonga_command('object_inspect Lexicon17072_0.ind"
"ex')::jsonb)->1->'value'));\n"
"```"
msgstr ""

msgid ""
"However, it is difficult that specify a table that has a specific index on thi"
"s procedure.\n"
"Especially, if the table have multiple Pgroonga's indexes, we specify a target"
" index difficultly."
msgstr ""
"しかし、この方法では、特定のインデックスを持つテーブルを特定することは困難です。\n"
"特に複数のPGroongaのインデックスがあるテーブルの場合、対象のインデックスを指定することは困難です。"

msgid ""
"We can get the name of the table that stores information of specific the index"
" simply by `pgroonga_index_column_name`.\n"
"Because `pgroonga_index_column_name` can specify the target index in an argume"
"nt.\n"
"Therefoure, we don't execute `table_list` command, we don't need found target "
"table from many tables."
msgstr ""
"`pgroonga_index_column_name` を使えば、特定のインデックスを持つテーブルを簡単に特定できます。`pgroonga_index_c"
"olumn_name` は引数に対象のインデックスを指定できるため、 `table_list` コマンドを実行して、多くのテーブルから対象を特定する必要があ"
"りません。"

msgid "## Syntax"
msgstr "## 構文"

msgid "Here is the syntax of this function:"
msgstr "この関数の構文は以下の通りです。:"

msgid ""
"```text\n"
"text pgroonga_index_column_name(pgroonga_index_name, column_name)\n"
"text pgroonga_index_column_name(pgroonga_index_name, column_index)\n"
"```"
msgstr ""

msgid ""
"`pgroonga_index_name` is a `text` type value. We specify PGroonga's index name"
"."
msgstr "`pgroonga_index_name` は `text` 型の値です。 PGroongaのインデックス名を指定します。"

msgid "The second argument has two patterns as below."
msgstr "第二引数には、以下のように二つのパターンがあります。"

msgid ""
"* `column_name` is a `text` type value. We specify the column name of the targ"
"et of PGroonga's index."
msgstr "* `column_name` は、 `text` 型の値です。 対象のPGroongaのインデックス名を指定します。"

msgid ""
"* `column_index` is a `int4` type value. We specify the position of the column"
" of the target of PGroonga's index.\n"
"  This position starts with `0`."
msgstr ""
"* `column_index` は `int4` 型の値です。 対象のPGroongaのインデックスの位置を指定します。\n"
"位置は、 `0` から始まります。"

msgid "## Usage"
msgstr "## 使い方"

msgid "Here are sample schema and data when we specify index position:"
msgstr "インデックスの位置を指定する場合のサンプルのスキーマとデータは以下の通りです。:"

msgid ""
"```sql\n"
"CREATE TABLE memos (\n"
"  id integer,\n"
"  title text,\n"
"  content text,\n"
"  tag text\n"
");\n"
"CREATE INDEX pgroonga_index\n"
"          ON memos\n"
"       USING pgroonga (title, content, tag);\n"
"SELECT pgroonga_index_column_name('pgroonga_index', 2);"
msgstr ""

msgid ""
" pgroonga_index_column_name \n"
"----------------------------\n"
" Lexicon17765_2.index\n"
"(1 row)\n"
"```"
msgstr ""

msgid "Here are sample schema and data when we specify index name:"
msgstr "インデックス名を指定する場合のサンプルのスキーマとデータは以下の通りです。:"

msgid ""
"```sql\n"
"CREATE TABLE memos (\n"
"  id integer,\n"
"  title text,\n"
"  content text,\n"
"  tag text\n"
");\n"
"CREATE INDEX pgroonga_index\n"
"          ON memos\n"
"       USING pgroonga (title, content, tag);\n"
"SELECT pgroonga_index_column_name('pgroonga_index', 'tag');"
msgstr ""

msgid ""
"Here are sample schema and data when we get information of index by `pgroonga_"
"index_column_name`:"
msgstr "`pgroonga_index_column_name` を使ってインデックスの情報を取得する場合のサンプルのスキーマとデータは以下の通りです。:"

msgid ""
"```sql\n"
"CREATE TABLE memos (\n"
"  id integer,\n"
"  title text,\n"
"  content text,\n"
"  tag text\n"
");\n"
"CREATE INDEX pgroonga_index\n"
"          ON memos\n"
"       USING pgroonga (title, content, tag);\n"
"SELECT * FROM jsonb_each(\n"
"                          (\n"
"                            (\n"
"                              pgroonga_command(\n"
"                                'object_inspect',\n"
"                                ARRAY[\n"
"                                  'name', pgroonga_index_column_name('pgroonga"
"_index', 'tag')\n"
"                                ]\n"
"                              )::jsonb\n"
"                            )->1->'value'\n"
"                          )\n"
"                        );\n"
"    key     |    value\n"
"------------+-----------------------------------------------------------------"
"-----------------------------\n"
" size       | \"normal\"\n"
" type       | {\"id\": 263, \"name\": \"Sources21220\", \"size\": 4, \"type\": {\"id\": 48"
", \"name\": \"table:hash_key\"}}\n"
" weight     | false\n"
" section    | false\n"
" position   | true\n"
" statistics | {\"max_section_id\": 0, \"n_array_segments\": 0, \"n_garbage_chunks\":"
" [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"total_chunk_size\": 0, \"n_buff"
"er_segments\": 0, \"n_garbage_segments\": 0, \"max_in_use_chunk_id\": 0, \"max_array"
"_segment_id\": 0, \"n_unmanaged_segments\": 0, \"max_buffer_segment_id\": 0, \"max_n"
"_physical_segments\": 131072, \"next_physical_segment_id\": 0, \"max_in_use_physic"
"al_segment_id\": 0}\n"
"(6 rows)\n"
"```"
msgstr ""
