msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: pgroonga_query_expand function\n"
"upper_level: ../\n"
"---"
msgstr ""
"---\n"
"title: pgroonga_query_expand関数\n"
"upper_level: ../\n"
"---"

msgid "# `pgroonga_query_expand` function"
msgstr "# `pgroonga_query_expand`関数"

msgid "Since 1.2.2."
msgstr "1.2.2で追加。"

msgid "## Summary"
msgstr "## 概要"

msgid ""
"`pgroonga_query_expand` function expands registered synonyms in query in [quer"
"y syntax][groonga-query-syntax]. Query syntax is used by [`&@~` operator][quer"
"y-v2], [`&@~|` operator][query-in-v2] and so on."
msgstr ""
"`pgroonga_query_expand`関数は[クエリー構文][groonga-query-syntax]を使ったクエリー内にある登録済みの同義語を展"
"開します。クエリー構文は[`&@~`演算子][query-v2]や[`&@~|`演算子][query-in-v2]で使われています。"

msgid ""
"`pgroonga_query_expand` function is useful to implement [query expansion][wiki"
"pedia-query-expansion]. See also [document for Groonga's query expansion featu"
"re][groonga-query-expander]."
msgstr ""
"`pgroonga_query_expand`関数は[クエリー展開][wikipedia-query-expansion]機能を実現するときに便利です。[G"
"roongaのクエリー展開機能のドキュメント][groonga-query-expander]も参照してください。"

msgid "## Syntax"
msgstr "## 構文"

msgid "Here is the syntax of this function:"
msgstr "この関数の構文は次の通りです。"

msgid ""
"```text\n"
"text pgroonga_query_expand(table_name,\n"
"                           term_column_name,\n"
"                           synonyms_column_name,\n"
"                           query)\n"
"```"
msgstr ""

msgid ""
"`table_name` is a `text` type value. It's an existing table name that stores s"
"ynonyms."
msgstr "`table_name`は`text`型の値です。同義語を格納している既存のテーブルの名前を指定します。"

msgid ""
"`term_column_name` is a `text` type value. It's an column name that stores ter"
"m to be expanded in the `table_name` table. The column is `text` type or `text"
"[]` type value."
msgstr ""
"`term_column_name`は`text`型の値です。`table_name`テーブル内の展開対象の単語を格納しているカラムの名前を指定します。この"
"カラムは`text`型か`text[]`型のカラムです。"

msgid ""
"`synonyms_column_name` is a `text` type value. It's an column name that stores"
" synonyms of the `term` column. The column is `text[]` type value."
msgstr ""
"`synonyms_column_name`は`text`型の値です。`term`カラムの同義語を格納しているカラム名を指定します。このカラムは`text["
"]`型のカラムです。"

msgid ""
"`query` is a `text` type value. It's a query that uses [query syntax][groonga-"
"query-syntax]."
msgstr "`query`は`text`型の値です。[クエリー構文][groonga-query-syntax]を使っているクエリーです。"

msgid ""
"`pgroonga_query_expand` returns a `text` type value. All registered synonyms a"
"re expanded in the `query`."
msgstr "`pgroonga_query_expand`は`text`型の値を返します。`query`中にある登録済みの同義語がすべて展開されています。"

msgid ""
"It's recommended that `${table_name}.${term_column_name}` is indexed by PGroon"
"ga with `pgroonga_text_term_search_ops_v2` operator class for fast query expan"
"sion like the following:"
msgstr ""
"次のように`pgroonga_text_term_search_ops_v2`演算子クラス指定のPGroongaで`${table_name}.${term"
"_column_name}`のインデックスを作成することをオススメします。これは高速にクエリー展開できるようにするためです。"

msgid ""
"```sql\n"
"CREATE TABLE synonyms (\n"
"  term text,\n"
"  synonyms text[]\n"
");"
msgstr ""

msgid ""
"CREATE INDEX synonyms_term\n"
"          ON synonyms\n"
"       USING pgroonga (term pgroonga_text_term_search_ops_v2);\n"
"```"
msgstr ""

msgid ""
"`pgroonga_query_escape` function can work without index but can work faster wi"
"th index."
msgstr "`pgroonga_query_escape`関数はインデックスなしでも動きますが、インデックスがあるとより高速に動きます。"

msgid ""
"You can use all index access methods that support `=` for `text` type such as "
"`btree`. But it's recommended that you use PGroonga. Because PGroonga supports"
" value normalized `=` (including case insensitive comparison) for `text`. Valu"
"e normalized `=` is useful for query expansion."
msgstr ""
"`btree`のように`text`型の`=`に対応しているインデックスアクセスメソッドであればどのインデックスアクセスメソッドでも使えます。しかし、PGro"
"ongaを使うことをオススメします。なぜなら、PGroongaは`text`の値を正規化した`=`（大文字小文字を無視した比較を含む）に対応しているからです"
"。クエリー展開時は値を正規化した`=`が便利です。"

msgid "## Usage"
msgstr "## 使い方"

msgid "You can use the following styles:"
msgstr "次のスタイルを使えます。"

msgid "  * A term to multiple synonyms mapping"
msgstr "  * 1単語を複数の同義語にマッピング"

msgid "  * Synonym groups"
msgstr "  * 同義語グループ"

msgid "### A term to multiple synonyms mapping {#usage-term-to-synonyms}"
msgstr "### 1単語を複数の同義語にマッピング {#usage-term-to-synonyms}"

msgid "Here are sample schema and data:"
msgstr "サンプルスキーマとデータは次の通りです。"

msgid ""
"CREATE INDEX synonyms_term\n"
"          ON synonyms\n"
"       USING pgroonga (term pgroonga_text_term_search_ops_v2);"
msgstr ""

msgid ""
"INSERT INTO synonyms VALUES ('PGroonga', ARRAY['PGroonga', 'Groonga PostgreSQL"
"']);\n"
"```"
msgstr ""

msgid ""
"In this sample, all of `\"PGroonga\"` and `\"pgroonga\"` in query are expanded bec"
"ause PGroonga index is used:"
msgstr "このサンプルではPGroongaインデックスを使っているのでクエリー中の`\"PGroonga\"`も`\"pgroonga\"`もすべて展開されます。"

msgid ""
"```sql\n"
"SELECT pgroonga_query_expand('synonyms', 'term', 'synonyms',\n"
"                             'PGroonga OR Mroonga') AS query_expand;\n"
"--                  query_expand                   \n"
"-- -------------------------------------------------\n"
"--  ((PGroonga) OR (Groonga PostgreSQL)) OR Mroonga\n"
"-- (1 row)\n"
"SELECT pgroonga_query_expand('synonyms', 'term', 'synonyms',\n"
"                             'pgroonga OR mroonga') AS query_expand;\n"
"--                   query_expand                   \n"
"-- -------------------------------------------------\n"
"--  ((PGroonga) OR (Groonga PostgreSQL)) OR mroonga\n"
"-- (1 row)\n"
"```"
msgstr ""

msgid "### Synonym groups {#usage-synonym-groups}"
msgstr "### 同義語グループ {#usage-synonym-groups}"

msgid "Since 2.2.1."
msgstr "2.2.1で追加。"

msgid ""
"```sql\n"
"CREATE TABLE synonym_groups (\n"
"  synonyms text[]\n"
");"
msgstr ""

msgid ""
"CREATE INDEX synonym_groups_synonyms\n"
"          ON synonym_groups\n"
"       USING pgroonga (synonyms pgroonga_text_array_term_search_ops_v2);"
msgstr ""

msgid ""
"INSERT INTO synonym_groups\n"
"  VALUES (ARRAY['PGroonga', 'Groonga']);\n"
"```"
msgstr ""

msgid ""
"```sql\n"
"SELECT pgroonga_query_expand('synonym_groups', 'synonyms', 'synonyms',\n"
"                             'PGroonga OR Mroonga') AS query_expand;\n"
"--              query_expand             \n"
"-- --------------------------------------\n"
"--  ((PGroonga) OR (Groonga)) OR Mroonga\n"
"-- (1 row)\n"
"SELECT pgroonga_query_expand('synonym_groups', 'synonyms', 'synonyms',\n"
"                             'pgroonga OR mroonga') AS query_expand;\n"
"--              query_expand             \n"
"-- --------------------------------------\n"
"--  ((PGroonga) OR (Groonga)) OR mroonga\n"
"-- (1 row)\n"
"```"
msgstr ""

msgid "### Practical Example Using Synonym groups"
msgstr "### 同義語グループを使った検索の具体例"

msgid ""
"This is for when you want to search similar names like (Timothy or Tim), (Will"
"iam,Bill or Billy), (Stephen,Steven or Steve)."
msgstr "人名テーブルの中から同じ読み方で漢字の異なる人を探すサンプルです。（例：斉藤, 齊藤, 斎藤, 齋藤）"

msgid "Here are sample schema and data for solving this problem using Synonym groups."
msgstr "サンプルとなるスキーマとデータは次の通りです。"

msgid "#### Name Table"
msgstr "#### 人名テーブル"

msgid ""
"```sql\n"
"CREATE TABLE names (\n"
"  name varchar(255)\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_names_index\n"
"          ON names\n"
"       USING pgroonga (name pgroonga_varchar_full_text_search_ops_v2);"
msgstr ""

msgid ""
"INSERT INTO names\n"
"  (name)\n"
"  VALUES ('William Gates'),('Steven Paul Jobs'),('Timothy Donald Cook');\n"
"```"
msgstr ""
"INSERT INTO names\n"
"  (name)\n"
"  VALUES ('斉藤'),('齊藤'),('斎藤'),('鈴木'),('田中'),('佐藤');\n"
"```"

msgid "#### Synonym groups Table"
msgstr "#### 同義語テーブル"

msgid ""
"INSERT INTO synonym_groups\n"
"  VALUES (ARRAY['Stephen', 'Steven', 'Steve']);\n"
"```"
msgstr ""
"INSERT INTO synonym_groups\n"
"  VALUES (ARRAY['斉藤', '齊藤', '斎藤', '齋藤']);\n"
"```"

msgid ""
"In this example, all of `\"Stephen\"`, `\"Steven\"` and `\"Steve\"` in the query wil"
"l be shown because the value \"Steve\"  is expanded within PGroonga index used."
msgstr "このサンプルでは「斉藤」で検索することでnamesテーブル内データの`\"斉藤\"`も`\"齊藤\"`も`\"斎藤\"`もすべて以下のように展開されます。"

msgid ""
"```sql\n"
"SELECT pgroonga_query_expand('synonym_groups', 'synonyms', 'synonyms',\n"
"                             'Steve') AS query_expand;\n"
"--              query_expand             \n"
"-- --------------------------------------\n"
"--   ((Stephen) OR (Steven) OR (Steve))\n"
"-- (1 row)\n"
"```"
msgstr ""
"```sql\n"
"SELECT pgroonga_query_expand('synonym_groups', 'synonyms', 'synonyms',\n"
"                             '斉藤') AS query_expand;\n"
"--              query_expand             \n"
"-- --------------------------------------\n"
"--   ((斉藤) OR (齊藤) OR (斎藤) OR (齋藤))\n"
"-- (1 row)\n"
"```"

msgid "An example down below is Name Table Search Example with pgroonga_query_expand."
msgstr "この例では、人名テーブルの検索をするので以下のように検索します。"

msgid ""
"Note: Name Table \"name\" column is `varchar` character type. so that you need s"
"pecifically to cast  result of  `pgroonga_query_expand` as `pgroonga_query_exp"
"and(...)::varchar`.  (You do not need to cast `pgroonga_query_expand()` as var"
"char when you search on `text` character columns. Because return type of `pgro"
"onga_query_expand()` is `text` character type.)"
msgstr ""
"注意： 下記の例では、検索対象のカラムが`varchar`型なので、`pgroonga_query_expand(...)::varchar`として`pgr"
"oonga_query_expand`の結果を明示的にキャストする必要があります。(`pgroonga_query_expand()`の戻り値の型は`tex"
"t`型なので、検索対象のカラムが`text`型の場合はキャストは不要です。)"

msgid ""
"Without type casting, PostgreSQL uses sequential search when your search colum"
"n type differs from `pgroonga_query_expand()` type so that you may experience "
"some performance issues."
msgstr ""
"このようにキャストしないと、検索対象のカラムと`pgroonga_query_expand()`の型が異なりシーケンシャルサーチになるため、パフォーマンスが"
"出ません。"

msgid ""
"```sql\n"
"SELECT name AS synonym_names from names where name &@~ pgroonga_query_expand(\n"
"                             'synonym_groups', 'synonyms', 'synonyms','Steve')"
"::varchar;\n"
"--   synonym_names              \n"
"-- -----------------\n"
"--  Steven Paul Jobs\n"
"--(1 rows)\n"
"```"
msgstr ""
"```sql\n"
"SELECT name AS synonym_names from names where name &@~ pgroonga_query_expand(\n"
"                             'synonym_groups', 'synonyms', 'synonyms','斉藤')::v"
"archar;\n"
"--  synonym_names             \n"
"-- -----------------\n"
"--      斉藤\n"
"--      齊藤\n"
"--      斎藤\n"
"--(3 rows)\n"
"```"

msgid "## See also"
msgstr "## 参考"

msgid "  * [`&@~` operator][query-v2]: Full text search by easy to use query language"
msgstr "  * [`&@~`演算子][query-v2]：便利なクエリー言語を使った全文検索"

msgid ""
"  * [`&@~|` operator][query-in-v2]: Full text search by an array of queries in"
" easy to use query language"
msgstr "  * [`&@~|`演算子][query-in-v2]：便利なクエリー言語を使ったクエリーの配列での全文検索"

msgid ""
"[groonga-query-syntax]:http://groonga.org/docs/reference/grn_expr/query_syntax"
".html"
msgstr ""
"[groonga-query-syntax]:http://groonga.org/ja/docs/reference/grn_expr/query_syn"
"tax.html"

msgid ""
"[groonga-query-expander]:http://groonga.org/docs/reference/commands/select.htm"
"l#select-query-expander"
msgstr ""
"[groonga-query-expander]:http://groonga.org/ja/docs/reference/commands/select."
"html#select-query-expander"

msgid "[wikipedia-query-expansion]:https://en.wikipedia.org/wiki/Query_expansion"
msgstr ""

msgid "[query-v2]:../operators/query-v2.html"
msgstr ""

msgid "[query-in-v2]:../operators/query-in-v2.html"
msgstr ""
