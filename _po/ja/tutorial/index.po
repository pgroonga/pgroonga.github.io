msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: Tutorial\n"
"---"
msgstr ""
"---\n"
"title: チュートリアル\n"
"---"

msgid "# Tutorial"
msgstr "# チュートリアル"

msgid ""
"This document describes how to use PGroonga step by step. If you don't install"
" PGroonga yet, [install][install] PGroonga before you read this document."
msgstr ""
"このドキュメントはPGroongaの使い方を段階を追って説明します。まだPGroongaをインストールしていない場合は、このドキュメントを読む前にPGroo"
"ngaを[インストール][install]してください。"

msgid ""
"You can use PGroonga as fast full text search index. You can also use PGroonga"
" as more general index for equality condition (`=`) and comparison conditions "
"(`<`, `>=` and so on)."
msgstr "PGroongaは高速な全文検索インデックスを提供します。さらに、等価条件（`=`）・比較条件（`<`や`>=`など）用の一般的なインデックスも提供します。"

msgid ""
"PostgreSQL provides GiST and GIN as bundled indexes. You can use PGroonga as a"
"lternative of GiST and GIN. See [PGroonga versus GiST and GIN](../reference/pg"
"roonga-versus-gist-and-gin.html) for differences of them."
msgstr ""
"PostgreSQLは組み込みのインデックスとしてGiSTとGINを提供しています。PGroongaはGiST・GINの代わりに使うことができます。PGro"
"ongaとGiST・GINの違いは[PGroonga対GiST・GIN](../reference/pgroonga-versus-gist-and-gin"
".html)を参照してください。"

msgid "This document describes about the followings:"
msgstr "このドキュメントは次のことを説明します。"

msgid "  * How to use PGroonga as index for full text search"
msgstr "  * PGroongaを全文検索用インデックスとして使う方法"

msgid "  * How to use PGroonga as index for regular expression"
msgstr "  * PGroongaを正規表現用インデックスとして使う方法"

msgid "  * How to use PGroonga as index for similar search"
msgstr "  * PGroongaを類似文書用インデックスとして使う方法"

msgid ""
"  * How to use PGroonga as index for equality condition and comparison conditi"
"ons"
msgstr "  * PGroongaを等価条件・比較条件用インデックスとして使う方法"

msgid "  * How to use PGroonga as index for array"
msgstr "  * PGroongaを配列用インデックスとして使う方法"

msgid "  * How to use PGroonga as index for JSON"
msgstr "  * PGroongaをJSON用インデックスとして使う方法"

msgid "  * How to use PGroonga as index for auto complete"
msgstr "  * PGroongaをオートコンプリート用インデックスとして使う方法"

msgid "  * How to use Groonga through PGroonga (advanced topic)"
msgstr "  * PGroonga経由でGroongaを使う方法（高度な話題）"

msgid "## Full text search"
msgstr "## 全文検索"

msgid "This section describes about the followings:"
msgstr "このセクションでは次のことを説明します。"

msgid ""
"  * How to prepare PGroonga based full text search system\n"
"  * Operators for full text search\n"
"  * Score"
msgstr ""
"  * PGroongaベースの全文検索システムの準備方法\n"
"  * 全文検索用の演算子\n"
"  * スコアー"

msgid "### How to prepare PGroonga based full text search system"
msgstr "### PGroongaベースの全文検索システムの準備方法"

msgid ""
"This section describes about how to prepare PGroonga based full text search sy"
"stem."
msgstr "このセクションはPGroongaベースの全文検索システムの準備方法を説明します。"

msgid "Create a column that you want to enable full text search as `text` type:"
msgstr "全文検索をしたいカラムを`text`型のカラムとして作ります。"

msgid ""
"```sql\n"
"CREATE TABLE memos (\n"
"  id integer,\n"
"  content text\n"
");\n"
"```"
msgstr ""

msgid "`memos.content` column is a full text search target column."
msgstr "`memos.content`カラムが全文検索対象のカラムです。"

msgid "Create a `pgroonga` index against the column:"
msgstr "このカラムに対して`pgroonga`インデックスを作ります。"

msgid ""
"```\n"
"CREATE EXTENSION IF NOT EXISTS pgroonga;\n"
"CREATE INDEX pgroonga_content_index ON memos USING pgroonga (content);\n"
"```"
msgstr ""

msgid ""
"See [CREATE INDEX USING pgroonga](../reference/create-index-using-pgroonga.htm"
"l) for more details."
msgstr ""
"詳細は[CREATE INDEX USING pgroonga](../reference/create-index-using-pgroonga.html"
")を参照してください。"

msgid "Insert test data:"
msgstr "テストデータを挿入します。"

msgid ""
"```sql\n"
"INSERT INTO memos VALUES (1, 'PostgreSQL is a relational database management s"
"ystem.');\n"
"INSERT INTO memos VALUES (2, 'Groonga is a fast full text search engine that s"
"upports all languages.');\n"
"INSERT INTO memos VALUES (3, 'PGroonga is a PostgreSQL extension that uses Gro"
"onga as index.');\n"
"INSERT INTO memos VALUES (4, 'There is groonga command.');\n"
"```"
msgstr ""
"```sql\n"
"INSERT INTO memos VALUES (1, 'PostgreSQLはリレーショナル・データベース管理システムです。');\n"
"INSERT INTO memos VALUES (2, 'Groongaは日本語対応の高速な全文検索エンジンです。');\n"
"INSERT INTO memos VALUES (3, 'PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です"
"。');\n"
"INSERT INTO memos VALUES (4, 'groongaコマンドがあります。');\n"
"```"

msgid "Disable sequential scan to ensure using `pgroonga` index:"
msgstr "確実に`pgroonga`インデックスを使うためにシーケンシャルスキャンを無効にします。"

msgid ""
"```sql\n"
"SET enable_seqscan = off;\n"
"```"
msgstr ""

msgid ""
"NOTE: You should not disable sequential scan on production environment. This i"
"s only for test."
msgstr "注意：本番環境ではシーケンシャルスキャンを無効にするべきではありません。これはテスト用の設定です。"

msgid "### Operators for full text search"
msgstr "### 全文検索用演算子"

msgid "There are the following operators to perform full text search:"
msgstr "全文検索をする場合は次の演算子を使います。"

msgid "  * `&@`"
msgstr ""

msgid "  * `&@~`"
msgstr ""

msgid "  * `LIKE`"
msgstr ""

msgid "  * `ILIKE`"
msgstr ""

msgid "#### `&@` operator"
msgstr "#### `&@`演算子"

msgid "You can use `&@` operator to perform full text search by one keyword:"
msgstr "1つのキーワードで全文検索をする場合は`&@`演算子を使います。"

msgid ""
"```sql\n"
"SELECT * FROM memos WHERE content &@ 'engine';\n"
"--  id |                                content                               "
"  \n"
"-- ----+----------------------------------------------------------------------"
"--\n"
"--   2 | Groonga is a fast full text search engine that supports all languages"
".\n"
"-- (1 row)\n"
"```"
msgstr ""
"```sql\n"
"SELECT * FROM memos WHERE content &@ '全文検索';\n"
"--  id |                      content                      \n"
"-- ----+---------------------------------------------------\n"
"--   2 | Groongaは日本語対応の高速な全文検索エンジンです。\n"
"-- (1 row)\n"
"```"

msgid "See [`&@` operator](../reference/operators/match-v2.html) for more details."
msgstr "詳細は[`&@`演算子](../reference/operators/match-v2.html)を参照してください。"

msgid "#### `&@~` operator"
msgstr "#### `&@~`演算子"

msgid ""
"You can use `&@~` operator to perform full text search by query syntax such as"
" `keyword1 OR keyword2`:"
msgstr "`キーワード1 OR キーワード2`というようなクエリー構文を使って全文検索をする場合は`&@~`演算子を使えます。"

msgid ""
"```sql\n"
"SELECT * FROM memos WHERE content &@~ 'PGroonga OR PostgreSQL';\n"
"--  id |                            content                             \n"
"-- ----+----------------------------------------------------------------\n"
"--   3 | PGroonga is a PostgreSQL extension that uses Groonga as index.\n"
"--   1 | PostgreSQL is a relational database management system.\n"
"-- (2 rows)\n"
"```"
msgstr ""
"```sql\n"
"SELECT * FROM memos WHERE content &@~ 'PGroonga OR PostgreSQL';\n"
"--  id |                                  content\n"
"-- ----+----------------------------------------------------------------------"
"-----\n"
"--   3 | PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です。\n"
"--   1 | PostgreSQLはリレーショナル・データベース管理システムです。\n"
"-- (2 rows)\n"
"```"

msgid ""
"Query syntax is similar to syntax of Web search engine ( `keyword1 OR keyword2"
"` means `OR` search and `keyword1 keyword2` means `AND` search ).\n"
"For example, you can use `OR` to merge result sets of performing full text sea"
"rch by two or more words. In the above example, you get a merged result set. T"
"he merged result set has records that includes `PGroonga` or `PostgreSQL`."
msgstr ""
"クエリーの構文はWeb検索エンジンで使われている構文と似ています。( `keyword1 OR keyword2`は`OR`検索で、`keyword1 ke"
"yword2`は`AND` 検索です)\n"
"たとえば、`OR`を使うと複数のキーワードでの全文検索結果をマージできます。上の例ではマージされた結果が返ってきています。`PGroonga`または`Pos"
"tgreSQL`を含むレコードがマージされた結果になります。"

msgid ""
"See [Groonga document](http://groonga.org/docs/reference/grn_expr/query_syntax"
".html) for full query syntax."
msgstr ""
"クエリー構文の詳細は[Groongaのドキュメント](http://groonga.org/ja/docs/reference/grn_expr/query"
"_syntax.html)を参照してください。"

msgid "See [`&@~` operator](../reference/operators/query-v2.html) for more details."
msgstr "詳細は[`&@~`演算子](../reference/operators/query-v2.html)を参照してください。"

msgid "#### `LIKE` operator {#like}"
msgstr "#### `LIKE`演算子 {#like}"

msgid ""
"PGroonga supports `LIKE` operator. You can perform fast full text search by PG"
"roonga without changing existing SQL."
msgstr "PGroongaは`LIKE`演算子をサポートしています。既存のSQLを変更しなくてもPGroongaを使った高速な全文検索を実現できます。"

msgid "`column LIKE '%keyword%'` almost equals to `column &@ 'keyword'`:"
msgstr "`column LIKE '%キーワード%'`は`column &@ 'キーワード'`とほぼ同じです。"

msgid ""
"```sql\n"
"SELECT * FROM memos WHERE content LIKE '%engine%';\n"
"--  id |                                content                               "
"  \n"
"-- ----+----------------------------------------------------------------------"
"--\n"
"--   2 | Groonga is a fast full text search engine that supports all languages"
".\n"
"-- (1 row)\n"
"```"
msgstr ""
"```sql\n"
"SELECT * FROM memos WHERE content LIKE '%全文検索%';\n"
"--  id |                      content\n"
"-- ----+---------------------------------------------------\n"
"--   2 | Groongaは日本語対応の高速な全文検索エンジンです。\n"
"-- (1 row)\n"
"```"

msgid ""
"`LIKE` operator support is convenient because you can improve performance with"
"out changing existing applications. But `LIKE` operator is slower than `&@` be"
"cause `LIKE` operator requires sequential search after index search. The proce"
"ss is called as \"recheck\". It's recommend that you change to `&@` or `&@~` fro"
"m `LIKE` in your application for more performance."
msgstr ""
"`LIKE`演算子のサポートは既存のアプリケーションを変更せずに性能を改善できるので便利です。しかし、`LIKE`演算子は`&@`よりも遅いです。なぜなら、"
"`LIKE`演算子はインデックスを使った検索のあとにシーケンシャルサーチする必要があるからです。この処理は「recheck」と呼ばれています。より性能を出す"
"ためにアプリケーション中の`LIKE`を`&@`または`&@~`に変更することをオススメします。"

msgid "See [`LIKE` operator](../reference/operators/like.html) for more details."
msgstr "詳細は[`LIKE`演算子](../reference/operators/like.html)を参照してください。"

msgid "You can also use `ILIKE` operator like `LIKE` operator."
msgstr "`LIKE`演算子のように`ILIKE`演算子を使うこともできます。"

msgid "### Score {#score}"
msgstr "### スコアー {#score}"

msgid ""
"You can use `pgroonga_score` function to get precision as a number. If a recor"
"d is more precision against searched query, the record has more higher number."
msgstr ""
"`pgroonga_score`関数を使うとマッチした度合いを数値で取得することができます。検索したクエリーに対してよりマッチしているレコードほど高い数値に"
"なります。"

msgid "Here is a sample schema that includes primary key into indexed columns:"
msgstr "以下はインデックス対象のカラムにプライマリーキーが入っているスキーマの例です。"

msgid ""
"```sql\n"
"CREATE TABLE score_memos (\n"
"  id integer PRIMARY KEY,\n"
"  content text\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_score_memos_content_index\n"
"          ON score_memos\n"
"       USING pgroonga (content);\n"
"```"
msgstr ""

msgid ""
"```sql\n"
"INSERT INTO score_memos VALUES (1, 'PostgreSQL is a relational database manage"
"ment system.');\n"
"INSERT INTO score_memos VALUES (2, 'Groonga is a fast full text search engine "
"that supports all languages.');\n"
"INSERT INTO score_memos VALUES (3, 'PGroonga is a PostgreSQL extension that us"
"es Groonga as index.');\n"
"INSERT INTO score_memos VALUES (4, 'There is groonga command.');\n"
"```"
msgstr ""
"```sql\n"
"INSERT INTO score_memos VALUES (1, 'PostgreSQLはリレーショナル・データベース管理システムです。');\n"
"INSERT INTO score_memos VALUES (2, 'Groongaは日本語対応の高速な全文検索エンジンです。');\n"
"INSERT INTO score_memos VALUES (3, 'PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの"
"拡張機能です。');\n"
"INSERT INTO score_memos VALUES (4, 'groongaコマンドがあります。');\n"
"```"

msgid "Perform full text search and get score."
msgstr "全文検索を実行してスコアーを取得します。"

msgid ""
"```sql\n"
"SELECT *, pgroonga_score(tableoid, ctid) AS score\n"
"  FROM score_memos\n"
" WHERE content &@ 'PGroonga' OR content &@ 'PostgreSQL';\n"
"--  id |                            content                             | scor"
"e \n"
"-- ----+----------------------------------------------------------------+-----"
"--\n"
"--   1 | PostgreSQL is a relational database management system.         |     "
"1\n"
"--   3 | PGroonga is a PostgreSQL extension that uses Groonga as index. |     "
"2\n"
"-- (2 rows)\n"
"```"
msgstr ""
"```sql\n"
"SELECT *, pgroonga_score(tableoid, ctid) AS score\n"
"  FROM score_memos\n"
" WHERE content &@ 'PGroonga' OR content &@ 'PostgreSQL';\n"
"--  id |                                  content                             "
"     | score \n"
"-- ----+----------------------------------------------------------------------"
"-----+-------\n"
"--   1 | PostgreSQLはリレーショナル・データベース管理システムです。                |     1\n"
"--   3 | PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です。 |     2\n"
"-- (2 rows)\n"
"```"

msgid ""
"You can sort matched records by precision descending by using `pgroonga_score`"
" function in `ORDER BY` clause:"
msgstr "`ORDER BY`節で`pgroonga_score`関数を使うことでスコアー順にマッチしたレコードをソートできます。"

msgid ""
"```sql\n"
"SELECT *, pgroonga_score(tableoid, ctid) AS score\n"
"  FROM score_memos\n"
" WHERE content &@ 'PGroonga' OR content &@ 'PostgreSQL'\n"
" ORDER BY pgroonga_score(tableoid, ctid) DESC;\n"
"--  id |                            content                             | scor"
"e \n"
"-- ----+----------------------------------------------------------------+-----"
"--\n"
"--   3 | PGroonga is a PostgreSQL extension that uses Groonga as index. |     "
"2\n"
"--   1 | PostgreSQL is a relational database management system.         |     "
"1\n"
"-- (2 rows)\n"
"```"
msgstr ""
"```sql\n"
"SELECT *, pgroonga_score(tableoid, ctid) AS score\n"
"  FROM score_memos\n"
" WHERE content &@ 'PGroonga' OR content &@ 'PostgreSQL'\n"
" ORDER BY pgroonga_score(tableoid, ctid) DESC;\n"
"--  id |                                  content                             "
"     | score \n"
"-- ----+----------------------------------------------------------------------"
"-----+-------\n"
"--   3 | PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です。 |     2\n"
"--   1 | PostgreSQLはリレーショナル・データベース管理システムです。                |     1\n"
"-- (2 rows)\n"
"```"

msgid ""
"See [`pgroonga_score` function](../reference/functions/pgroonga-score.html) fo"
"r more details such as how to compute precision."
msgstr ""
"マッチした度合いの計算方法など詳細は[`pgroonga_score`関数](../reference/functions/pgroonga-score.h"
"tml)を参照してください。"

msgid "### Highlight {#highlight}"
msgstr "### ハイライト {#highlight}"

msgid ""
"You can use `pgroonga_highlight_html` function to get your specified search ke"
"ywords highlighted easily in the results."
msgstr "`pgroonga_highlight_html` 関数を使うことで検索結果の中身を手軽に検索キーワードでハイライトすることができます。"

msgid "Here is a sample schema:"
msgstr "サンプルスキーマは以下の通りです:"

msgid ""
"```sql\n"
"-- Just make sure you already enabled PGroonga Extension\n"
"CREATE EXTENSION IF NOT EXISTS pgroonga;"
msgstr ""
"```sql\n"
"-- PGroonga Extensionが既にあるかをチェックし、無ければ追加\n"
"CREATE EXTENSION IF NOT EXISTS pgroonga;"

msgid ""
"-- Create sample table\n"
"CREATE TABLE sample_texts (\n"
"  id integer PRIMARY KEY,\n"
"  content text\n"
");"
msgstr ""
"-- サンプルテーブル作成\n"
"CREATE TABLE sample_texts (\n"
"  id integer PRIMARY KEY,\n"
"  content text\n"
");"

msgid ""
"CREATE INDEX pgroonga_sample_content_index\n"
"          ON sample_texts\n"
"       USING pgroonga (content);\n"
"```"
msgstr ""

msgid "Insert sample data:"
msgstr "サンプルデータを挿入します。"

msgid ""
"```sql\n"
"INSERT INTO sample_texts VALUES (1, 'PostgreSQL is a relational database manag"
"ement system.');\n"
"INSERT INTO sample_texts VALUES (2, 'Groonga is a fast full text search engine"
" that supports all languages.');\n"
"INSERT INTO sample_texts VALUES (3, 'PGroonga is a PostgreSQL extension that u"
"ses Groonga as index.');\n"
"INSERT INTO sample_texts VALUES (4, 'There is groonga command.');\n"
"```"
msgstr ""

msgid ""
"Perform full text search and get your search keywords ('PostgreSQL' and 'datab"
"ase' in this example) highlighted."
msgstr "全文検索を実施し、検索キーワード（この例では’PostgreSQL’と’database’ですね）をハイライト表示させます。"

msgid ""
"```sql\n"
"SELECT\n"
"\tpgroonga_highlight_html (content,\n"
"\t\tpgroonga_query_extract_keywords ('PostgreSQL database')) AS highlighted_cont"
"ent\n"
"FROM\n"
"\tsample_texts\n"
"WHERE\n"
"\tCONTENT &@~ 'PostgreSQL database';"
msgstr ""

msgid ""
"--                                                highlighted_content         "
"                                       \n"
"-- ---------------------------------------------------------------------------"
"---------------------------------------\n"
"--  <span class=\"keyword\">PostgreSQL</span> is a relational <span class=\"keywo"
"rd\">database</span> management system.\n"
"-- (1 row)\n"
"```"
msgstr ""

msgid ""
"See [`pgroonga_highlight_html` function](../reference/functions/pgroonga-highl"
"ight-html.html) and [`pgroonga_query_extract_keywords` function](../reference/"
"functions/pgroonga-query-extract-keywords.html) for more details."
msgstr ""
"詳細は [`pgroonga_highlight_html` 関数](../reference/functions/pgroonga-highlight-h"
"tml.html) と [`pgroonga_query_extract_keywords` 関数](../reference/functions/pgro"
"onga-query-extract-keywords.html) を参照してください。"

msgid "### Snippet (KWIC, keyword in context) {#snippet}"
msgstr "### スニペット（KWIC、keyword in context） {#snippet}"

msgid ""
"You can use `pgroonga_snippet_html` function to get texts around keywords from"
" search target text. It's also known as [KWIC](https://en.wikipedia.org/wiki/K"
"ey_Word_in_Context) (keyword in context). You can see it in search result on W"
"eb search engine."
msgstr ""
"`pgroonga_snippet_html`関数を使うと検索対象のテキストからキーワード周辺のテキストを抽出できます。この処理を[KWIC](https:"
"//ja.wikipedia.org/wiki/KWIC)（keyword in context）とも言います。Webの検索エンジンの検索結果でみたことがあ"
"る人も多いでしょう。"

msgid "Here is a sample text for description. It's a description about Groonga."
msgstr "説明用のサンプルテキストは次の通りです。なお、これはGroongaの説明文です。"

msgid ""
"> Groonga is a fast and accurate full text search engine based on inverted ind"
"ex. One of the characteristics of Groonga is that a newly registered document "
"instantly appears in search results. Also, Groonga allows updates without read"
" locks. These characteristics result in superior performance on real-time appl"
"ications."
msgstr ""

msgid ""
"There are some `fast` keywords. `pgroonga_snippet_html` extracts texts around "
"`fast`. Keywords in extracted texts are surround with `<span class=\"keyword\">`"
" and `</span>`."
msgstr ""
"この中には`fast`というキーワードがいくつか出現しています。`pgroonga_snippet_html`は`fast`周辺のテキストを抽出します。抽出"
"されたテキスト内のキーワードは`<span class=\"keyword\">`と`</span>`で囲まれています。"

msgid ""
"`html` in `pgroonga_snippet_html` means that this function returns result for "
"HTML output."
msgstr "`pgroonga_snippet_html`という関数名の中の`html`は、この関数はHTML出力用の結果を返す、という意味です。"

msgid "Here is the result of `pgroonga_snippet_html` against the above text:"
msgstr "上述のテキストに対して`pgroonga_snippet_html`を実行した結果は次の通りです。"

msgid ""
"> Groonga is a <span class=\"keyword\">fast</span> and accurate full text search"
" engine based on inverted index. One of the characteristics of Groonga is that"
" a newly registered document instantly appears in search results. Also, Gro"
msgstr ""

msgid ""
"This function can be used for all texts. It's not only for search result by PG"
"roonga."
msgstr "この関数はすべてのテキストに対して使うことができます。PGroongaでの検索結果以外にも使えるということです。"

msgid ""
"Here is a sample SQL that describes about it. You can use the function in the "
"following `SELECT` that doesn't have `FROM`. Note that [`unnest`]({{ site.post"
"gresql_doc_base_url.en }}/functions-array.html) is a PostgreSQL function that "
"converts an array to rows."
msgstr ""
"この挙動を説明するサンプルSQLは次の通りです。`FROM`がない次の`SELECT`でもこの関数を使えます。[`unnest`]({{ site.post"
"gresql_doc_base_url.ja }}/functions-array.html)は配列を列に変換するPostgreSQLの関数であることに注意"
"してください。"

msgid ""
"```sql\n"
"SELECT unnest(pgroonga_snippet_html(\n"
"  'Groonga is a fast and accurate full text search engine based on ' ||\n"
"  'inverted index. One of the characteristics of Groonga is that a ' ||\n"
"  'newly registered document instantly appears in search results. ' ||\n"
"  'Also, Groonga allows updates without read locks. These characteristics ' ||"
"\n"
"  'result in superior performance on real-time applications.' ||\n"
"  '\n"
"' ||\n"
"  '\n"
"' ||\n"
"  'Groonga is also a column-oriented database management system (DBMS). ' ||\n"
"  'Compared with well-known row-oriented systems, such as MySQL and ' ||\n"
"  'PostgreSQL, column-oriented systems are more suited for aggregate ' ||\n"
"  'queries. Due to this advantage, Groonga can cover weakness of ' ||\n"
"  'row-oriented systems.',\n"
"  ARRAY['fast', 'PostgreSQL']));\n"
"                                                                              "
"   --                                unnest                                   "
"                                                                              "
"\n"
"-- ---------------------------------------------------------------------------"
"------------------------------------------------------------------------------"
"------------------------------------------------------------------------------"
"\n"
"--  Groonga is a <span class=\"keyword\">fast</span> and accurate full text sear"
"ch engine based on inverted index. One of the characteristics of Groonga is th"
"at a newly registered document instantly appears in search results. Also, Gro\n"
"--  ase management system (DBMS). Compared with well-known row-oriented system"
"s, such as MySQL and <span class=\"keyword\">PostgreSQL</span>, column-oriented "
"systems are more suited for aggregate queries. Due to this advantage, Groonga\n"
"-- (2 rows)\n"
"```"
msgstr ""

msgid ""
"See [`pgroonga_snippet_html` function](../reference/functions/pgroonga-snippet"
"-html.html) for more details."
msgstr ""
"詳細は[`pgroonga_snippet_html`関数](../reference/functions/pgroonga-snippet-html.ht"
"ml)を参照してください。"

msgid "### Synonym {#synonym}"
msgstr "### 同義語 {#synonym}"

msgid ""
"See [How to use synonym expansion](../how-to/synonym-expansion.html) for more "
"details."
msgstr "詳細は[同義語展開の使い方](../how-to/synonym-expansion.html)を参照してください。"

msgid "## Regular expression {#regular-expression}"
msgstr "## 正規表現 {#regular-expression}"

msgid "TODO"
msgstr ""

msgid ""
"See [`&~` operator](../reference/operators/regular-expression-v2.html) for mor"
"e details."
msgstr "詳細は[`&~`演算子](../reference/operators/regular-expression-v2.html)を参照してください。"

msgid "## Similar search {#similar-search}"
msgstr "## 類似文書検索 {#similar-search}"

msgid ""
"See [`&@*` operator](../reference/operators/similar-search-v2.html) for more d"
"etails."
msgstr "詳細は[`&@*`演算子](../reference/operators/similar-search-v2.html)を参照してください。"

msgid "## Equality condition and comparison conditions {#equal}"
msgstr "## 等価条件と比較条件 {#equal}"

msgid ""
"You can use PGroonga for equality condition and comparison conditions. There a"
"re some differences between how to create index for string types and other typ"
"es. There is no difference between how to write condition for string types and"
" other types."
msgstr ""
"等価条件と比較条件にもPGroongaを使うことができます。この使い方をする場合、文字列型と他の型でインデックスの作り方が異なります。条件の書き方は文字列型"
"でも他の型でも違いはありません。"

msgid "  * How to use PGroonga for not string types"
msgstr "  * 文字列型以外の型に対してPGroongaを使う方法"

msgid "  * How to use PGroonga for string types"
msgstr "  * 文字列型に対してPGroongaを使う方法"

msgid "### How to use PGroonga for not string types {#equal-not-string}"
msgstr "### 文字列型以外の型に対してPGroongaを使う方法 {#equal-not-string}"

msgid ""
"You can use PGroonga for not string types such as number. You can use equality"
" condition and comparison conditions against these types."
msgstr "数値型のように文字列型以外の型にPGroongaを使うことができます。対象の型に対して等価条件と比較条件を使うことができます。"

msgid "Create index with `USING pgroonga`:"
msgstr "`USING pgroonga`付きでインデックスを作成します。"

msgid ""
"```sql\n"
"CREATE TABLE ids (\n"
"  id integer\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_id_index ON ids USING pgroonga (id);\n"
"```"
msgstr ""

msgid ""
"The special SQL to use PGroonga is only `CREATE INDEX`. You can use SQL for B-"
"tree index to use PGroonga."
msgstr ""
"PGroongaを使うために必要になる特別なSQLの書き方は`CREATE INDEX`の書き方だけです。PGroongaを使うときはBツリーのインデックス"
"を使うときのSQLと同じSQLを使えます。"

msgid ""
"```sql\n"
"INSERT INTO ids VALUES (1);\n"
"INSERT INTO ids VALUES (2);\n"
"INSERT INTO ids VALUES (3);\n"
"```"
msgstr ""

msgid "Disable sequential scan:"
msgstr "シーケンシャルスキャンを無効にします。"

msgid "Search:"
msgstr "検索します。"

msgid ""
"```sql\n"
"SELECT * FROM ids WHERE id <= 2;\n"
"--  id\n"
"-- ----\n"
"--   1\n"
"--   2\n"
"-- (2 rows)\n"
"```"
msgstr ""

msgid "### How to use PGroonga for string types {#equal-string}"
msgstr "### 文字列型に対してPGroongaを使う方法 {#equal-string}"

msgid ""
"You need to use `varchar` type to use PGroonga as an index for equality condit"
"ion and comparison conditions against string."
msgstr "文字列に対する等価条件・比較条件用のインデックスとしてPGroongaを使うためには`varchar`型を使う必要があります。"

msgid ""
"You must to specify the maximum number of characters of `varchar` to satisfy t"
"hat the maximum byte size of the column is equal to 4096 byte or smaller. Rela"
"tion between the maximum number of characters and the maximum byte size is rel"
"ated to encoding. For example, you must to specify 1023 or smaller as the maxi"
"mum number of characters for UTF-8 encoding. Because UTF-8 encoding `varchar` "
"keeps 4 byte for one character and PostgreSQL uses 4 byte for metadata."
msgstr ""
"`varchar`型の最大文字数は最大バイト数が4096バイト以下になるように指定する必要があります。たとえば、UTF-8エンコーディングを使う場合は最大文"
"字数は1023文字以下にする必要があります。なぜなら、UTF-8エンコーディングの`varchar`は1文字あたり4バイト確保し、PostgreSQLはメタ"
"データ用に4バイトを確保するからです。"

msgid ""
"```sql\n"
"CREATE TABLE tags (\n"
"  id integer,\n"
"  tag varchar(1023)\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_tag_index ON tags USING pgroonga (tag);\n"
"```"
msgstr ""

msgid ""
"```sql\n"
"INSERT INTO tags VALUES (1, 'PostgreSQL');\n"
"INSERT INTO tags VALUES (2, 'Groonga');\n"
"INSERT INTO tags VALUES (3, 'Groonga');\n"
"```"
msgstr ""

msgid ""
"```sql\n"
"SELECT * FROM tags WHERE tag = 'Groonga';\n"
"--  id |   tag\n"
"-- ----+---------\n"
"--   2 | Groonga\n"
"--   3 | Groonga\n"
"-- (2 rows)\n"
"--\n"
"```"
msgstr ""

msgid "## How to use PGroonga for array"
msgstr "## 配列に対してPGroongaを使う方法"

msgid ""
"You can use PGroonga as an index for array of `text` type or array of `varchar"
"`."
msgstr "`text`型の配列または`varchar`型の配列のインデックスとしてPGroongaを使うことができます。"

msgid ""
"You can perform full text search against array of `text` type. If one or more "
"elements in an array are matched, the record is matched."
msgstr "`text`型の配列に対して全文検索することができます。配列の中の1つ以上の要素がマッチしたらそのレコードはマッチしたことになります。"

msgid ""
"You can perform equality condition against array of `varchar` type. If one or "
"more elements in an array are matched, the record is matched. It's useful for "
"tag search."
msgstr ""
"`varchar`型の配列に対して等価条件で検索することができます。配列の中の1つ以上の要素がマッチしたらそのレコードはマッチしたことになります。これはタグ"
"検索で有用です。"

msgid "  * How to use PGroonga for `text` type of array"
msgstr "  * `text`型の配列に対してPGroongaを使う方法"

msgid "  * How to use PGroonga for `varchar` type of array"
msgstr "  * `varchar`型の配列に対してPGroongaを使う方法"

msgid "### How to use PGroonga for `text` type of array"
msgstr "### `text`型の配列に対してPGroongaを使う方法"

msgid ""
"```sql\n"
"CREATE TABLE docs (\n"
"  id integer,\n"
"  sections text[]\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_sections_index ON docs USING pgroonga (sections);\n"
"```"
msgstr ""

msgid ""
"```sql\n"
"INSERT INTO docs\n"
"     VALUES (1,\n"
"             ARRAY['PostgreSQL is a relational database management system.',\n"
"                   'PostgreSQL supports full text search partially.']);\n"
"INSERT INTO docs\n"
"     VALUES (2,\n"
"             ARRAY['Groonga is a fast full text search engine that supports al"
"l languages.',\n"
"                   'Groonga can be embedded into other systems.']);\n"
"INSERT INTO docs\n"
"     VALUES (3,\n"
"             ARRAY['PGroonga is a PostgreSQL extension that uses Groonga as in"
"dex.',\n"
"                   'It adds powerful full text search feature to PostgreSQL.']"
");\n"
"```"
msgstr ""
"```sql\n"
"INSERT INTO docs\n"
"     VALUES (1,\n"
"             ARRAY['PostgreSQLはリレーショナル・データベース管理システムです。',\n"
"                   'PostgreSQLは部分的に全文検索をサポートしています。']);\n"
"INSERT INTO docs\n"
"     VALUES (2,\n"
"             ARRAY['Groongaは日本語対応の高速な全文検索エンジンです。',\n"
"                   'Groongaは他のシステムに組み込むことができます。']);\n"
"INSERT INTO docs\n"
"     VALUES (3,\n"
"             ARRAY['PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です。',\n"
"                   'PostgreSQLに高機能な全文検索機能を追加します。']);\n"
"```"

msgid ""
"You can use `&@` operator or `&@~` operator for full text search. The full tex"
"t search doesn't care about the position of element."
msgstr "全文検索には`&@`演算子または`&@~`演算子を使います。全文検索では何番目の要素かは考慮しません。"

msgid ""
"```sql\n"
"SELECT * FROM docs WHERE sections &@ 'text';\n"
"--  id |                                                           sections   "
"                                                         \n"
"-- ----+----------------------------------------------------------------------"
"---------------------------------------------------------\n"
"--   1 | {\"PostgreSQL is a relational database management system.\",\"PostgreSQL"
" supports full text search partially.\"}\n"
"--   2 | {\"Groonga is a fast full text search engine that supports all languag"
"es.\",\"Groonga can be embedded into other systems.\"}\n"
"--   3 | {\"PGroonga is a PostgreSQL extension that uses Groonga as index.\",\"It"
" adds powerful full text search feature to PostgreSQL.\"}\n"
"-- (3 rows)\n"
"```"
msgstr ""
"```sql\n"
"SELECT * FROM docs WHERE sections &@ '全文検索';\n"
"--  id |                                                          sections    "
"                                                      \n"
"-- ----+----------------------------------------------------------------------"
"------------------------------------------------------\n"
"--   1 | {PostgreSQLはリレーショナル・データベース管理システムです。,PostgreSQLは部分的に全文検索をサポートしています。}\n"
"--   2 | {Groongaは日本語対応の高速な全文検索エンジンです。,Groongaは他のシステムに組み込むことができます。}\n"
"--   3 | {PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です。,PostgreSQLに高機能な全文検"
"索機能を追加します。}\n"
"-- (3 rows)\n"
"```"

msgid "### How to use PGroonga for `varchar` type of array"
msgstr "### `varchar`型の配列に対してPGroongaを使う方法"

msgid ""
"```sql\n"
"CREATE TABLE products (\n"
"  id integer,\n"
"  name text,\n"
"  tags varchar(1023)[]\n"
");"
msgstr ""

msgid ""
"CREATE INDEX pgroonga_tags_index ON products USING pgroonga (tags);\n"
"```"
msgstr ""

msgid ""
"```sql\n"
"INSERT INTO products\n"
"     VALUES (1,\n"
"             'PostgreSQL',\n"
"             ARRAY['PostgreSQL', 'RDBMS']);\n"
"INSERT INTO products\n"
"     VALUES (2,\n"
"             'Groonga',\n"
"             ARRAY['Groonga', 'full-text search']);\n"
"INSERT INTO products\n"
"     VALUES (3,\n"
"             'PGroonga',\n"
"             ARRAY['PostgreSQL', 'Groonga', 'full-text search']);\n"
"```"
msgstr ""

msgid ""
"You can use `&@` operator to find records that have one or more matched elemen"
"ts. If element's value equals to queried value, the element is treated as matc"
"hed."
msgstr "指定した要素を含むレコードを検索するには`&@`演算子を使います。要素の値が指定した値と同じなら、その要素はマッチしたことになります。"

msgid ""
"```sql\n"
"SELECT * FROM products WHERE tags &@ 'PostgreSQL';\n"
"--  id |    name    |                  tags                   \n"
"-- ----+------------+-----------------------------------------\n"
"--   1 | PostgreSQL | {PostgreSQL,RDBMS}\n"
"--   3 | PGroonga   | {PostgreSQL,Groonga,\"full-text search\"}\n"
"-- (2 rows)\n"
"```"
msgstr ""

msgid "## How to use PGroonga for JSON {#json}"
msgstr "## JSONに対してPGroongaを使う方法 {#json}"

msgid ""
"PGroonga also supports `jsonb` type. You can search JSON data by one or more k"
"eys and/or one or more values with PGroonga."
msgstr "PGroongaは`jsonb`型にも対応しています。PGroongaを使うとJSON中のキー・値に対して検索することができます。"

msgid ""
"You can also search JSON data by full text search against all text values in J"
"SON. It's an unique feature of PGroonga. Built-in PostgreSQL 9 features and [J"
"sQuery](https://github.com/postgrespro/jsquery) don't support it. PostgreSQL 1"
"0 supports it as a built-in feature."
msgstr ""
"JSON中のすべてのテキスト値に対して全文検索することもできます。これはPGroonga独自の機能です。PostgreSQL 9の組み込みの機能でも[JsQ"
"uery](https://github.com/postgrespro/jsquery)でもこの機能はサポートしていません。PostgreSQL 10では"
"組み込みの機能でサポートしています。"

msgid "Think about the following JSON:"
msgstr "次のJSONを考えてください。"

msgid ""
"```json\n"
"{\n"
"  \"message\": \"Server is started.\",\n"
"  \"host\": \"www.example.com\",\n"
"  \"tags\": [\n"
"    \"web\",\n"
"  ]\n"
"}\n"
"```"
msgstr ""

msgid ""
"You can find the JSON by full text search with `search`, `example` or `web` be"
"cause all text values are full text search target."
msgstr ""
"`search`、`example`、`web`のどれで全文検索してもこのJSONを見つけることができます。なぜなら、すべてのテキスト値が全文検索対象だから"
"です。"

msgid "PGroonga provides the following two operators for searching against `jsonb`:"
msgstr "PGroongaは`jsonb`に対して検索するために次の2つの演算子を提供しています。"

msgid "  * `@>` operator"
msgstr "  * `@>`演算子"

msgid "  * `&@` operator"
msgstr "  * `&@`演算子"

msgid "  * `&@~` operator"
msgstr "  * `&@~`演算子"

msgid "  * `` &` `` operator"
msgstr "  * `` &` ``演算子"

msgid ""
"[`@>` operator is a built-in PostgreSQL operator]({{ site.postgresql_doc_base_"
"url.en }}/functions-json.html#FUNCTIONS-JSONB-OP-TABLE). `@>` returns true whe"
"n the right hand side `jsonb` is a subset of left hand side `jsonb`."
msgstr ""
"[`@>`演算子はPostgreSQL組み込みの演算子]({{ site.postgresql_doc_base_url.ja }}/functions-j"
"son.html#functions-jsonb-op-table)です。`@>`は右辺の`jsonb`が左辺の`jsonb`のサブセットなら真を返します。"

msgid "You can execute `@>` faster by PGroonga."
msgstr "PGroongaを使うことで高速に`@>`を実行出来ます。"

msgid ""
"`&@` operator is a PGroonga original operator. You can perform full text searc"
"h against all texts in JSON by one keyword."
msgstr "`&@`演算子はPGroonga独自の演算子です。JSON中のすべてのテキストを対象に指定した1つのキーワードを全文検索できます。"

msgid ""
"`&@~` operator is a PGroonga original operator. You can perform full text sear"
"ch against all texts in JSON by query syntax."
msgstr "`&@~`演算子はPGroonga独自の演算子です。JSON中のすべてのテキストを対象にクエリー構文を使って全文検索できます。"

msgid ""
"`` &` `` operator is a PGroonga original operator. You can write complex condi"
"tion that can't be written by `@>` operator such as range search."
msgstr "`` &` ``演算子はPGroonga独自の演算子です。`@>`演算子では記述できない範囲検索のような複雑な条件も書けます。"

msgid "### Sample schema and data"
msgstr "### サンプルスキーマとデータ"

msgid "Here are sample schema and data for examples:"
msgstr "例に使うサンプルスキーマとデータは次の通りです。"

msgid ""
"```sql\n"
"CREATE TABLE logs (\n"
"  record jsonb\n"
");"
msgstr ""

msgid "CREATE INDEX pgroonga_logs_index ON logs USING pgroonga (record);"
msgstr ""

msgid ""
"INSERT INTO logs\n"
"     VALUES ('{\n"
"                \"message\": \"Server is started.\",\n"
"                \"host\":    \"www.example.com\",\n"
"                \"tags\": [\n"
"                  \"web\",\n"
"                  \"example.com\"\n"
"                ]\n"
"              }');\n"
"INSERT INTO logs\n"
"     VALUES ('{\n"
"                \"message\": \"GET /\",\n"
"                \"host\":    \"www.example.com\",\n"
"                \"code\":    200,\n"
"                \"tags\": [\n"
"                  \"web\",\n"
"                  \"example.com\"\n"
"                ]\n"
"              }');\n"
"INSERT INTO logs\n"
"     VALUES ('{\n"
"                \"message\": \"Send to <info@example.com>.\",\n"
"                \"host\":    \"mail.example.net\",\n"
"                \"tags\": [\n"
"                  \"mail\",\n"
"                  \"example.net\"\n"
"                ]\n"
"              }');\n"
"```"
msgstr ""

msgid "### `@>` operator {#jsonb-contain}"
msgstr "### `@>`演算子 {#jsonb-contain}"

msgid ""
"`@>` operator specify search condition by `jsonb` value. If condition `jsonb` "
"value is a subset of the search target `jsonb` value, `@>` operator returns `t"
"rue`."
msgstr ""
"`@>`演算子は`jsonb`の値で検索条件を指定します。もし、条件に指定した`jsonb`の値が検索対象の`jsonb`の値のサブセットなら`@>`演算子"
"は`true`を返します。"

msgid "Here is an example:"
msgstr "例です。"

msgid ""
"```sql\n"
"SELECT jsonb_pretty(record) FROM logs WHERE record @> '{\"host\": \"www.example.c"
"om\"}'::jsonb;\n"
"--             jsonb_pretty             \n"
"-- -------------------------------------\n"
"--  {                                  +\n"
"--      \"host\": \"www.example.com\",     +\n"
"--      \"tags\": [                      +\n"
"--          \"web\",                     +\n"
"--          \"example.com\"              +\n"
"--      ],                             +\n"
"--      \"message\": \"Server is started.\"+\n"
"--  }\n"
"--  {                                  +\n"
"--      \"code\": 200,                   +\n"
"--      \"host\": \"www.example.com\",     +\n"
"--      \"tags\": [                      +\n"
"--          \"web\",                     +\n"
"--          \"example.com\"              +\n"
"--      ],                             +\n"
"--      \"message\": \"GET /\"             +\n"
"--  }\n"
"-- (2 rows)\n"
"```"
msgstr ""

msgid ""
"See [`@>` operator](../reference/operators/jsonb-contain.html) for more detail"
"s."
msgstr "詳細は[`@>`演算子](../reference/operators/jsonb-contain.html)を参照してください。"

msgid "### `&@` operator"
msgstr "### `&@`演算子"

msgid "Here is an example to search \"server\" in JSON:"
msgstr "以下はJSON中の「server」を検索する例です。"

msgid ""
"```sql\n"
"SELECT jsonb_pretty(record) FROM logs WHERE record &@ 'server';\n"
"--             jsonb_pretty             \n"
"-- -------------------------------------\n"
"--  {                                  +\n"
"--      \"host\": \"www.example.com\",     +\n"
"--      \"tags\": [                      +\n"
"--          \"web\",                     +\n"
"--          \"example.com\"              +\n"
"--      ],                             +\n"
"--      \"message\": \"Server is started.\"+\n"
"--  }\n"
"-- (1 row)\n"
"```"
msgstr ""

msgid ""
"See [`&@` operator for `jsonb`](../reference/operators/match-jsonb-v2.html) fo"
"r more details."
msgstr "詳細は[`jsonb`用の`&@`演算子](../reference/operators/match-jsonb-v2.html)を参照してください。"

msgid "### `&@~` operator"
msgstr "### `&@~`演算子"

msgid "Here is an example to search \"server\" or \"send\" in JSON:"
msgstr "以下はJSON中の「server」または「send」を検索する例です。"

msgid ""
"```sql\n"
"SELECT jsonb_pretty(record) FROM logs WHERE record &@~ 'server OR send';\n"
"--                  jsonb_pretty                 \n"
"-- ----------------------------------------------\n"
"--  {                                           +\n"
"--      \"host\": \"www.example.com\",              +\n"
"--      \"tags\": [                               +\n"
"--          \"web\",                              +\n"
"--          \"example.com\"                       +\n"
"--      ],                                      +\n"
"--      \"message\": \"Server is started.\"         +\n"
"--  }\n"
"--  {                                           +\n"
"--      \"host\": \"mail.example.net\",             +\n"
"--      \"tags\": [                               +\n"
"--          \"mail\",                             +\n"
"--          \"example.net\"                       +\n"
"--      ],                                      +\n"
"--      \"message\": \"Send to <info@example.com>.\"+\n"
"--  }\n"
"-- (2 rows)\n"
"```"
msgstr ""

msgid ""
"See [`&@~` operator for `jsonb`](../reference/operators/query-jsonb-v2.html) f"
"or more details."
msgstr "詳細は[`jsonb`用の`&@~`演算子](../reference/operators/query-jsonb-v2.html)を参照してください。"

msgid "### `` &` `` operator"
msgstr "### `` &` ``演算子"

msgid ""
"Here is an example for range search. The `SELECT` returns records that is matc"
"hed with the following conditions:"
msgstr "範囲検索をする例です。この`SELECT`は次の条件にマッチするレコードを返します。"

msgid "  * `code` key exists at the top-level object"
msgstr "  * トップレベルのオブジェクトに`code`というキーが存在する"

msgid "  * Value of the `code` is greater than or equal to `200` and less than `300`"
msgstr "  * その`code`の値が`200`以上`300`未満である"

msgid ""
"```sql\n"
"SELECT jsonb_pretty(record) FROM logs WHERE record &` 'paths @ \".code\" && numb"
"er >= 200 && number < 300';\n"
"--           jsonb_pretty          \n"
"-- --------------------------------\n"
"--  {                             +\n"
"--      \"code\": 200,              +\n"
"--      \"host\": \"www.example.com\",+\n"
"--      \"tags\": [                 +\n"
"--          \"web\",                +\n"
"--          \"example.com\"         +\n"
"--      ],                        +\n"
"--      \"message\": \"GET /\"        +\n"
"--  }\n"
"-- (1 row)\n"
"```"
msgstr ""

msgid ""
"See [`` &` `` operator for `jsonb`](../reference/operators/script-jsonb-v2.htm"
"l) for more details."
msgstr ""
"詳細は[`jsonb`用の`` &` ``演算子](../reference/operators/script-jsonb-v2.html)を参照してくださ"
"い。"

msgid "## Auto complete"
msgstr "## オートコンプリート"

msgid ""
"See [how to implement auto complete feature][how-to-auto-complete] for more de"
"tails."
msgstr "詳細は[オートコンプリート機能の実装方法][how-to-auto-complete]を参照してください。"

msgid "## How to use Groonga through PGroonga {#groonga}"
msgstr "## PGroonga経由でGroongaを使う方法 {#groonga}"

msgid "This is an advanced topic."
msgstr "これは上級者向けの内容です。"

msgid "In most cases, Groonga is faster than PostgreSQL."
msgstr "多くの場合、GroongaはPostgreSQLより高速です。"

msgid ""
"For example, [drilldown feature](http://groonga.org/docs/reference/commands/se"
"lect.html#drilldown) in Groonga is faster than one `SELECT` and multiple `GROU"
"P BY`s (or one `GROUP BY GROUPING SET`) by PostgreSQL. Because all needed resu"
"lts can be done by one query in Groonga."
msgstr ""
"たとえば、Groongaの[ドリルダウン機能](http://groonga.org/ja/docs/reference/commands/select.h"
"tml#drilldown)はPostgreSQLで`SELECT`1回と複数の`GROUP BY`（または1回の`GROUP BY GROUPING SE"
"T`）を実行するよりも速いです。なぜならGroongaでは1回のクエリーで必要な結果をすべて返すからです。"

msgid ""
"In another instance, Groonga can perform query that doesn't use all columns in"
" record faster than PostgreSQL. Because Groonga has column oriented data store"
". Column oriented data store (Groonga) is faster than row oriented data store "
"(PostgreSQL) for accessing some columns. Row oriented data store needs to read"
" all columns in record to access only partial columns. Column oriented data st"
"ore just need to read only target columns in record."
msgstr ""
"別の例も紹介します。レコード中の一部のカラムしか使わないクエリーの実行はPostgreSQLよりGroongaの方が速いです。なぜなら、Groongaはカラ"
"ム指向（列指向）のデータストアを実装しているからです。カラム指向のデータストア（Groonga）は行指向のデータストア（PostgreSQL）よりも一部のカ"
"ラムにアクセスするのが速いのです。行指向のデータストアは一部のカラムにアクセスするだけでよい場合でもすべてのカラムを読み込む必要があります。一方、カラム指向"
"のデータストアは必要なカラムだけを読み込むことができます。"

msgid ""
"You can't use SQL to use Groonga directory. It's not PostgrSQL user friendly. "
"But PGroonga provides a feature to use Groonga directly through SQL."
msgstr ""
"GroongaそのものはSQLのインターフェイスを提供していません。これはPostgreSQLユーザーには使いづらいです。しかし、PGroongaはSQL経"
"由でGroongaを使う機能を提供しています。"

msgid "### `pgroonga_command` function"
msgstr "### `pgroonga_command`関数"

msgid ""
"You can execute [Groonga commands](http://groonga.org/docs/reference/command.h"
"tml) and get the result of the execution as string by `pgroonga_command` funct"
"ion."
msgstr ""
"`pgroonga_command`関数を使うと[Groongaのコマンド](http://groonga.org/ja/docs/reference/co"
"mmand.html)を実行し、その結果を文字列で取得できます。"

msgid ""
"Here is an example that executes [`status` command](http://groonga.org/docs/re"
"ference/commands/status.html):"
msgstr ""
"以下は[`status`コマンド](http://groonga.org/ja/docs/reference/commands/status.html)を実"
"行する例です。"

msgid ""
"```sql\n"
"SELECT pgroonga_command('status') AS command;\n"
"--                                   command                                  "
"                                                                              "
"  \n"
"-- ---------------------------------------------------------------------------"
"------------------------------------------------------------------------------"
"------------------------------------------------------------------------------"
"----\n"
"--  [[0,1423911561.69344,6.15119934082031e-05],{\"alloc_count\":164,\"starttime\":"
"1423911561,\"uptime\":0,\"version\":\"5.0.0-6-g17847c9\",\"n_queries\":0,\"cache_hit_ra"
"te\":0.0,\"command_version\":1,\"default_command_version\":1,\"max_command_version\":"
"2}]\n"
"-- (1 row)\n"
"```"
msgstr ""

msgid ""
"Result from Groonga is JSON. You can use JSON related functions provided by Po"
"stgreSQL to access result from Groonga."
msgstr ""
"Groongaから返ってくる結果はJSONです。Groongaから返ってくる結果にアクセスするためにPostgreSQLが提供するJSON関連の関数を使うこ"
"とができます。"

msgid ""
"Here is an example to map one key value pair in the result of `status` command"
" to one row:"
msgstr "以下は`status`コマンドの結果のキーと値のペアそれぞれを列に変換する例です。"

msgid ""
"```sql\n"
"SELECT * FROM json_each(pgroonga_command('status')::json->1);\n"
"--            key           |       value        \n"
"-- -------------------------+--------------------\n"
"--  alloc_count             | 168\n"
"--  starttime               | 1423911561\n"
"--  uptime                  | 221\n"
"--  version                 | \"5.0.0-6-g17847c9\"\n"
"--  n_queries               | 0\n"
"--  cache_hit_rate          | 0.0\n"
"--  command_version         | 1\n"
"--  default_command_version | 1\n"
"--  max_command_version     | 2\n"
"-- (9 rows)\n"
"```"
msgstr ""

msgid ""
"See [`pgroonga_command` function](../reference/functions/pgroonga-command.html"
") for more details."
msgstr ""
"詳細は[`pgroonga_command`関数](../reference/functions/pgroonga-command.html)を参照してくだ"
"さい。"

msgid "### `pgroonga_table_name` function {#pgroonga-table-name}"
msgstr "### `pgroonga_table_name`関数 {#pgroonga-table-name}"

msgid ""
"PGroonga stores values of index target columns. You can use these values to se"
"arch and output by [`select` Groonga command](http://groonga.org/docs/referenc"
"e/commands/select.html)."
msgstr ""
"PGroongaはインデックス対象のカラムの値を保存しています。これらの値を[Groongaの`select`コマンド](http://groonga.or"
"g/ja/docs/reference/commands/select.html)で検索・出力するために使うことができます。"

msgid ""
"`select` Groonga command needs table name. You can use `pgroonga_table_name` f"
"unction to convert index name in PostgreSQL to table name in Groonga."
msgstr ""
"Groongaの`select`コマンドを使うにはテーブル名が必要です。`pgroonga_table_name`関数を使うとPostgreSQLでのインデ"
"ックス名をGroongaでのテーブル名に変換できます。"

msgid ""
"Here is an example to use `select` command with `pgroonga_table_name` function"
":"
msgstr "以下は`pgroonga_table_name`関数を使って`select`コマンドを実行する例です。"

msgid ""
"```sql\n"
"SELECT *\n"
"  FROM json_array_elements(pgroonga_command('select ' || pgroonga_table_name('"
"pgroonga_content_index'))::json->1->0);\n"
"--                                      value                                 "
"     \n"
"-- ---------------------------------------------------------------------------"
"-----\n"
"--  [4]\n"
"--  [[\"_id\",\"UInt32\"],[\"content\",\"LongText\"],[\"ctid\",\"UInt64\"]]\n"
"--  [1,\"PostgreSQL is a relational database management system.\",1]\n"
"--  [2,\"Groonga is a fast full text search engine that supports all languages."
"\",2]\n"
"--  [3,\"PGroonga is a PostgreSQL extension that uses Groonga as index.\",3]\n"
"--  [4,\"There is groonga command.\",4]\n"
"-- (6 rows)\n"
"```"
msgstr ""
"```sql\n"
"SELECT *\n"
"  FROM json_array_elements(pgroonga_command('select ' || pgroonga_table_name('"
"pgroonga_content_index'))::json->1->0);\n"
"--                                        value                               "
"        \n"
"-- ---------------------------------------------------------------------------"
"--------\n"
"--  [4]\n"
"--  [[\"_id\",\"UInt32\"],[\"_key\",\"UInt64\"],[\"content\",\"LongText\"]]\n"
"--  [1,1,\"PostgreSQLはリレーショナル・データベース管理システムです。\"]\n"
"--  [2,2,\"Groongaは日本語対応の高速な全文検索エンジンです。\"]\n"
"--  [3,3,\"PGroongaはインデックスとしてGroongaを使うためのPostgreSQLの拡張機能です。\"]\n"
"--  [4,4,\"groongaコマンドがあります。\"]\n"
"-- (6 rows)\n"
"```"

msgid ""
"See [`pgroonga_table_name` function](../reference/functions/pgroonga-table-nam"
"e.html) for more details."
msgstr ""
"詳細は[`pgroonga_table_name`関数](../reference/functions/pgroonga-table-name.html)を"
"参照してください。"

msgid "## Next step"
msgstr "## 次のステップ"

msgid ""
"Now, you knew all PGroonga features! If you want to understand each feature, s"
"ee [reference manual][reference] for each feature."
msgstr ""
"これでPGroongaのすべての機能を知ったことになります！各機能を理解したい場合は各機能の[リファレンスマニュアル][reference]を参照しくてくだ"
"さい。"

msgid "[How to][how-to] may help you to use PGroonga for specific situation."
msgstr "[ハウツー][how-to]は特定用途向けのPGroongaの使い方を紹介しています。"

msgid ""
"If you get a problem or want to share your useful information, please contact "
"[PGroonga community][community]."
msgstr "なにか問題にぶつかった、有用な情報を持っている、そんな方は[PGroongaのコミュニティー][community]に参加してください。"

msgid "[install]:../install/"
msgstr ""

msgid "[reference]:../reference/"
msgstr ""

msgid "[how-to]:../how-to/"
msgstr ""

msgid "[how-to-auto-complete]:../how-to/auto-complete.html"
msgstr ""

msgid "[community]:../community/"
msgstr ""
