# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Kouhei Sutou <kou@cozmixng.org>, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-24 12:18+0900\n"
"PO-Revision-Date: 2023-08-13 00:16+0000\n"
"Last-Translator: Kouhei Sutou <kou@cozmixng.org>, 2023\n"
"Language-Team: Japanese (https://app.transifex.com/groonga/teams/174082/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../../../../v1/reference/functions/pgroonga-command.md:1
msgid ""
"---\n"
"title: pgroonga.command function\n"
"upper_level: ../\n"
"---"
msgstr ""
"---\n"
"title: pgroonga.command関数\n"
"upper_level: ../\n"
"---"

#: ../../../../../v1/reference/functions/pgroonga-command.md:6
msgid "# `pgroonga.command` function"
msgstr "# `pgroonga.command`関数"

#: ../../../../../v1/reference/functions/pgroonga-command.md:8
msgid "## Summary"
msgstr "## 概要"

#: ../../../../../v1/reference/functions/pgroonga-command.md:10
msgid ""
"`pgroonga.command` function executes a [Groonga "
"command](http://groonga.org/docs/reference/command.html) and returns the "
"result as `text` type value."
msgstr ""
"`pgroonga.command`関数は[Groongaのコマンド](http://groonga.org/ja/docs/reference/command.html)を実行して`text`型の値として結果を返します。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:12
msgid "## Syntax"
msgstr "## 構文"

#: ../../../../../v1/reference/functions/pgroonga-command.md:14
msgid "Here is the syntax of this function:"
msgstr "この関数の構文は次の通りです。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:16
msgid ""
"```text\n"
"text pgroonga.command(command)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:20
msgid ""
"`command` is a `text` type value. `pgroonga.command` executes `command` as a"
" Groonga command."
msgstr ""
"`command`は`text`型の値です。`pgroonga.command`は`command`をGroongaのコマンドとして実行します。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:22
msgid "Here is another syntax of this function. It can be used since 1.1.9:"
msgstr "この関数にはもうひとつ構文があります。これは1.1.9以降で使えます。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:24
msgid ""
"```text\n"
"text pgroonga.command(name,\n"
"                      ARRAY[argument_name1, argument_value1,\n"
"                            argument_name2, argument_value2,\n"
"                            ...])\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:31
msgid ""
"The second syntax is recommended because it escapes argument values "
"automatically. It prevents syntax error and Groonga command injection."
msgstr ""
"2つめの構文を推奨します。理由は引数の値を自動でエスケープするからです。これによりシンタックスエラーとGroongaコマンドインジェクションを防げます。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:33
msgid "`name` is a `text` type value. It's a command name to be executed."
msgstr "`name`は`text`型の値です。実行するコマンド名です。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:35
msgid ""
"`argument_name` is a `text` type value. It's an argument name followed by "
"the corresponded argument value."
msgstr "`argument_name`は`text`型の値です。引数名です。この後に対応する引数の値が続きます。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:37
msgid ""
"`argument_value` is a `text` type value. It's an argument value of the "
"preceding argument name."
msgstr "`argument_value`は`text`型の値です。直前にした引数名に対応する値です。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:39
msgid ""
"`pgroonga.command` builds a Groonga command from `name` and `argument_name`s"
" and `argument_value`s and executes the built Groonga command."
msgstr ""
"`pgroonga.command`は`name`と`argument_name`と`argument_value`からGroongaコマンドを作り、そのGroongaコマンドを実行します。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:41
msgid ""
"Groonga command returns result as JSON. `pgroonga.command` returns the JSON "
"as `text` type value. You can use [JSON functions and operations provided by"
" PostgreSQL]({{ site.postgresql_doc_base_url.en }}/functions-json.html) by "
"casting the result to `json` or `jsonb` type."
msgstr ""
"Groongaのコマンドは結果をJSONとして返します。`pgroonga.command`はJSONを`text`型の値として返します。結果を`json`型か`jsonb`型にキャストすると[PostgreSQLが提供するJSON関数・演算]({{"
" site.postgresql_doc_base_url.ja }}/functions-json.html)を使うことができます。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:43
msgid "## Usage"
msgstr "## 使い方"

#: ../../../../../v1/reference/functions/pgroonga-command.md:45
msgid "Here are sample schema and data:"
msgstr "サンプルスキーマとデータは次の通りです。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:47
msgid ""
"```sql\n"
"CREATE TABLE memos (\n"
"  content text\n"
");"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:52
msgid ""
"CREATE INDEX pgroonga_memos_index\n"
"          ON memos\n"
"       USING pgroonga (content);"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:56
msgid ""
"INSERT INTO memos VALUES ('PGroonga (PostgreSQL+Groonga) is great!');\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:59
msgid ""
"Here is an example to run [`status` Groonga "
"command](http://groonga.org/en/docs/reference/commands/status.html) that "
"doesn't have any arguments:"
msgstr ""
"以下は[`status` "
"Groongaコマンド](http://groonga.org/ja/docs/reference/commands/status.html)の実行例です。このコマンドには引数はありません。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:61
msgid ""
"```sql\n"
"SELECT jsonb_pretty(pgroonga.command('status')::jsonb);\n"
"--               jsonb_pretty               \n"
"-- -----------------------------------------\n"
"--  [                                      +\n"
"--      [                                  +\n"
"--          0,                             +\n"
"--          1480484730.607103,             +\n"
"--          0.0001363754272460938          +\n"
"--      ],                                 +\n"
"--      {                                  +\n"
"--          \"uptime\": 859,                 +\n"
"--          \"version\": \"6.1.0-53-g460b5c9\",+\n"
"--          \"n_queries\": 6,                +\n"
"--          \"starttime\": 1480483871,       +\n"
"--          \"start_time\": 1480483871,      +\n"
"--          \"alloc_count\": 14034,          +\n"
"--          \"cache_hit_rate\": 0.0,         +\n"
"--          \"command_version\": 1,          +\n"
"--          \"max_command_version\": 3,      +\n"
"--          \"default_command_version\": 1   +\n"
"--      }                                  +\n"
"--  ]\n"
"-- (1 row)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:87
msgid ""
"Here is an example to search inserted data. You can use [`select` Groonga "
"command](http://groonga.org/docs/reference/commands/select.html) for the "
"purpose. You need to convert PGroonga index name to Groonga table name by "
"[`pgroonga.table_name` function](pgroonga-table-name.html)."
msgstr ""
"以下は挿入したデータを検索する例です。検索には[`select` "
"Groongaコマンド](http://groonga.org/ja/docs/reference/commands/select.html)を使います。[`pgroonga.table_name`関数](pgroonga-"
"table-name.html)を使ってPGroongaのインデックス名をGroongaのテーブル名に変換する必要があります。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:89
msgid ""
"```sql\n"
"SELECT jsonb_pretty(\n"
"  pgroonga.command(\n"
"    'select ' ||\n"
"    '--table ' || pgroonga.table_name('pgroonga_memos_index')\n"
"  )::jsonb\n"
");\n"
"--                         jsonb_pretty                        \n"
"-- ------------------------------------------------------------\n"
"--  [                                                         +\n"
"--      [                                                     +\n"
"--          0,                                                +\n"
"--          1480484984.533947,                                +\n"
"--          0.0005786418914794922                             +\n"
"--      ],                                                    +\n"
"--      [                                                     +\n"
"--          [                                                 +\n"
"--              [                                             +\n"
"--                  1                                         +\n"
"--              ],                                            +\n"
"--              [                                             +\n"
"--                  [                                         +\n"
"--                      \"_id\",                                +\n"
"--                      \"UInt32\"                              +\n"
"--                  ],                                        +\n"
"--                  [                                         +\n"
"--                      \"content\",                            +\n"
"--                      \"LongText\"                            +\n"
"--                  ],                                        +\n"
"--                  [                                         +\n"
"--                      \"ctid\",                               +\n"
"--                      \"UInt64\"                              +\n"
"--                  ]                                         +\n"
"--              ],                                            +\n"
"--              [                                             +\n"
"--                  1,                                        +\n"
"--                  \"PGroonga (PostgreSQL+Groonga) is great!\",+\n"
"--                  1                                         +\n"
"--              ]                                             +\n"
"--          ]                                                 +\n"
"--      ]                                                     +\n"
"--  ]\n"
"-- (1 row)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:134
msgid ""
"Here is an example that searches records that contains \"PostgreSQL\" and "
"\"Groonga\". Note that you need to quote \"PostgreSQL Groonga\" to treat as "
"one argument value:"
msgstr ""
"以下は「PostgreSQL」と「Groonga」を含むレコードを検索する例です。「PostgreSQL "
"Groonga」を1つの引数値として扱うためにダブルクォート（またはシングルクォート）で囲む必要がある点に注意してください。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:136
msgid ""
"```sql\n"
"SELECT jsonb_pretty(\n"
"  pgroonga.command(\n"
"    'select ' ||\n"
"    '--table ' || pgroonga.table_name('pgroonga_memos_index') || ' ' ||\n"
"    '--match_columns content ' ||\n"
"    '--query \"PostgreSQL Groonga\"'\n"
"  )::jsonb\n"
");\n"
"--                         jsonb_pretty                        \n"
"-- ------------------------------------------------------------\n"
"--  [                                                         +\n"
"--      [                                                     +\n"
"--          0,                                                +\n"
"--          1480485153.923481,                                +\n"
"--          0.002448797225952148                              +\n"
"--      ],                                                    +\n"
"--      [                                                     +\n"
"--          [                                                 +\n"
"--              [                                             +\n"
"--                  1                                         +\n"
"--              ],                                            +\n"
"--              [                                             +\n"
"--                  [                                         +\n"
"--                      \"_id\",                                +\n"
"--                      \"UInt32\"                              +\n"
"--                  ],                                        +\n"
"--                  [                                         +\n"
"--                      \"content\",                            +\n"
"--                      \"LongText\"                            +\n"
"--                  ],                                        +\n"
"--                  [                                         +\n"
"--                      \"ctid\",                               +\n"
"--                      \"UInt64\"                              +\n"
"--                  ]                                         +\n"
"--              ],                                            +\n"
"--              [                                             +\n"
"--                  1,                                        +\n"
"--                  \"PGroonga (PostgreSQL+Groonga) is great!\",+\n"
"--                  1                                         +\n"
"--              ]                                             +\n"
"--          ]                                                 +\n"
"--      ]                                                     +\n"
"--  ]\n"
"-- (1 row)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:183
msgid ""
"If you use arguments array style, you don't need to care about quoting:"
msgstr "引数を配列で指定するスタイルと使うと、ダブルクォートで囲むことについて気にする必要がなくなります。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:185
msgid ""
"```sql\n"
"SELECT jsonb_pretty(\n"
"  pgroonga.command(\n"
"    'select',\n"
"    ARRAY[\n"
"      'table', pgroonga.table_name('pgroonga_memos_index'),\n"
"      'match_columns', 'content',\n"
"      'query', 'PostgreSQL Groonga'\n"
"    ]\n"
"  )::jsonb\n"
");\n"
"--                         jsonb_pretty                        \n"
"-- ------------------------------------------------------------\n"
"--  [                                                         +\n"
"--      [                                                     +\n"
"--          0,                                                +\n"
"--          1480485246.841189,                                +\n"
"--          0.00008869171142578125                            +\n"
"--      ],                                                    +\n"
"--      [                                                     +\n"
"--          [                                                 +\n"
"--              [                                             +\n"
"--                  1                                         +\n"
"--              ],                                            +\n"
"--              [                                             +\n"
"--                  [                                         +\n"
"--                      \"_id\",                                +\n"
"--                      \"UInt32\"                              +\n"
"--                  ],                                        +\n"
"--                  [                                         +\n"
"--                      \"content\",                            +\n"
"--                      \"LongText\"                            +\n"
"--                  ],                                        +\n"
"--                  [                                         +\n"
"--                      \"ctid\",                               +\n"
"--                      \"UInt64\"                              +\n"
"--                  ]                                         +\n"
"--              ],                                            +\n"
"--              [                                             +\n"
"--                  1,                                        +\n"
"--                  \"PGroonga (PostgreSQL+Groonga) is great!\",+\n"
"--                  1                                         +\n"
"--              ]                                             +\n"
"--          ]                                                 +\n"
"--      ]                                                     +\n"
"--  ]\n"
"-- (1 row)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-command.md:234
msgid "## Attention for `select` Groonga command {#attention}"
msgstr "## Groongaの`select`コマンドに関する注意事項 {#attention}"

#: ../../../../../v1/reference/functions/pgroonga-command.md:236
msgid ""
"You need to take care about invalid tuples when you use [`select` Groonga "
"command](http://groonga.org/docs/reference/commands/select.html)."
msgstr ""
"[Groongaの`select`コマンド](http://groonga.org/ja/docs/reference/commands/select.html)を使うとき、不正なタプルについて注意する必要があります。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:238
msgid ""
"See [`pgroonga_tuple_is_alive` Groonga function](../groonga-"
"functions/pgroonga-tuple-is-alive.html) for details."
msgstr ""
"詳細は[`pgroonga_tuple_is_alive` Groonga関数](../groonga-functions/pgroonga-"
"tuple-is-alive.html)を参照してください。"

#: ../../../../../v1/reference/functions/pgroonga-command.md:240
msgid "## See also"
msgstr "## 参考"

#: ../../../../../v1/reference/functions/pgroonga-command.md:242
msgid "  * [Examples in tutorial](../../tutorial/#groonga)"
msgstr "  * [チュートリアルにある例](../../tutorial/#groonga)"

#: ../../../../../v1/reference/functions/pgroonga-command.md:244
msgid "  * [`pgroonga.table_name` function](pgroonga-table-name.html)"
msgstr "  * [`pgroonga.table_name`関数](pgroonga-table-name.html)"

#: ../../../../../v1/reference/functions/pgroonga-command.md:246
msgid ""
"  * [`pgroonga_tuple_is_alive` Groonga function](../groonga-"
"functions/pgroonga-tuple-is-alive.html)"
msgstr ""
"  * [`pgroonga_tuple_is_alive` Groonga関数](../groonga-functions/pgroonga-"
"tuple-is-alive.html)"
