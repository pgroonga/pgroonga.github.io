# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Kouhei Sutou <kou@cozmixng.org>, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-24 12:18+0900\n"
"PO-Revision-Date: 2023-08-13 00:16+0000\n"
"Last-Translator: Kouhei Sutou <kou@cozmixng.org>, 2023\n"
"Language-Team: Japanese (https://app.transifex.com/groonga/teams/174082/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:1
msgid ""
"---\n"
"title: pgroonga.query_escape function\n"
"upper_level: ../\n"
"---"
msgstr ""
"---\n"
"title: pgroonga.query_escape関数\n"
"upper_level: ../\n"
"---"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:6
msgid "# `pgroonga.query_escape` function"
msgstr "# `pgroonga.query_escape`関数"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:8
msgid "Since 1.1.9."
msgstr "1.1.9で追加。"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:10
msgid "## Summary"
msgstr "## 概要"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:12
msgid ""
"`pgroonga.query_escape` function escapes special characters in [query "
"syntax](http://groonga.org/docs/reference/grn_expr/query_syntax.html). Query"
" syntax is used by [`&@~` operator][query-v2], [`&@~|` operator][query-"
"in-v2] and so on."
msgstr ""
"`pgroonga.query_escape`関数は[クエリー構文](http://groonga.org/ja/docs/reference/grn_expr/query_syntax.html)で特別な意味を持つ文字をエスケープします。[`&@~`演算子][query-v2]、[`&@~|`演算子][query-"
"in-v2]などがクエリー構文を使っています。"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:14
msgid ""
"`pgroonga.query_escape` function is useful to prevent Groonga command "
"injection via [`pgroonga.command` function](pgroonga-command.html). See also"
" [`pgroonga.command_escape_value` function](pgroonga-command-escape-"
"value.html) and [`pgroonga.escape` function](pgroonga-escape.html) for "
"preventing Groonga command injection."
msgstr ""
"`pgroonga.query_escape`関数は[`pgroonga.command`関数](pgroonga-"
"command.html)経由でGroongaコマンドインジェクションが発生することを防ぐときに有用です。Groongaコマンドインジェクションを防ぐことについては[`pgroonga.command_escape_value`関数](pgroonga-"
"command-escape-value.html)と[`pgroonga.escape`関数](pgroonga-"
"escape.html)も参照してください。"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:16
msgid "## Syntax"
msgstr "## 構文"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:18
msgid "Here is the syntax of this function:"
msgstr "この関数の構文は次の通りです。"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:20
msgid ""
"```text\n"
"text pgroonga.query_escape(query)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:24
msgid ""
"`query` is a `text` type value. It uses [query "
"syntax](http://groonga.org/docs/reference/grn_expr/query_syntax.html)."
msgstr ""
"`query`は[クエリー構文](http://groonga.org/ja/docs/reference/grn_expr/query_syntax.html)を使っている`text`型の値です。"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:26
msgid ""
"`pgroonga.query_escape` returns a `text` type value. All special characters "
"in the value are escaped."
msgstr ""
"`pgroonga.query_escape`は`text`型の値を返します。この値中の特別な意味を持つ文字はすべてエスケープされています。"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:28
msgid "## Usage"
msgstr "## 使い方"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:30
msgid "Here are sample schema and data:"
msgstr "サンプルスキーマとデータは次の通りです。"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:32
msgid ""
"```sql\n"
"CREATE TABLE memos (\n"
"  content text\n"
");"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:37
msgid ""
"CREATE INDEX pgroonga_memos_index\n"
"          ON memos\n"
"       USING pgroonga (content);"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:41
msgid ""
"INSERT INTO memos VALUES ('PGroonga (PostgreSQL+Groonga) is great!');\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:44
msgid ""
"You get an error with the query \"(PostgreSQL\" because closed parenthesis "
"doesn't exist:"
msgstr "クエリーが「(PostgreSQL」の場合はエラーが発生します。なぜなら対応する閉じカッコがないからです。"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:46
msgid ""
"```sql\n"
"SELECT * FROM memos WHERE content @@ '(PostgreSQL';\n"
"-- ERROR:  pgroonga: failed to parse expression: Syntax error: <(PostgreSQL||>\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:51
msgid ""
"You can use the query \"(PostgreSQL\" as is (\"(\" isn't treated as a "
"special character) by `pgroonga.query_escape` function:"
msgstr ""
"`pgroonga.query_escape`関数を使うことで「(PostgreSQL」というクエリーそのもの（「(」を特別な文字として扱わない）で検索できます。"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:53
msgid ""
"```sql\n"
"SELECT * FROM memos WHERE content @@ pgroonga.query_escape('(PostgreSQL');\n"
"--                  content                 \n"
"-- -----------------------------------------\n"
"--  PGroonga (PostgreSQL+Groonga) is great!\n"
"-- (1 row)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:61
msgid ""
"The same thing is occurred with [`pgroonga.command` function](pgroonga-"
"command.html):"
msgstr "[`pgroonga.command`関数](pgroonga-command.html)でも同じことが発生します。"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:63
msgid ""
"```sql\n"
"SELECT jsonb_pretty(\n"
"  pgroonga.command('select ' ||\n"
"                   '--table ' || pgroonga.table_name('pgroonga_memos_index') || ' ' ||\n"
"                   '--match_columns content ' ||\n"
"                   '--query \"(PostgreSQL\"')::jsonb\n"
");\n"
"--                jsonb_pretty               \n"
"-- ------------------------------------------\n"
"--  [                                       +\n"
"--      [                                   +\n"
"--          -63,                            +\n"
"--          1480432652.751489,              +\n"
"--          0.0007565021514892578,          +\n"
"--          \"Syntax error: <(PostgreSQL||>\" +\n"
"--      ]                                   +\n"
"--  ]\n"
"-- (1 row)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:83
msgid ""
"`pgroonga.query_escape` function with [`pgroonga.command_escape_value` "
"function](pgroonga-command-escape-value.html) can prevent the case:"
msgstr ""
"`pgroonga.query_escape`関数を[`pgroonga.command_escape_value`関数](pgroonga-"
"command-escape-value.html)と一緒に使うとこのケースを防ぐことができます。"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:85
msgid ""
"```sql\n"
"SELECT jsonb_pretty(\n"
"  pgroonga.command('select ' ||\n"
"                   '--table ' || pgroonga.table_name('pgroonga_memos_index') || ' ' ||\n"
"                   '--match_columns content ' ||\n"
"                   '--query ' || pgroonga.command_escape_value(pgroonga.query_escape('(PostgreSQL')))::jsonb\n"
");\n"
"--                         jsonb_pretty                        \n"
"-- ------------------------------------------------------------\n"
"--  [                                                         +\n"
"--      [                                                     +\n"
"--          0,                                                +\n"
"--          1480432832.061276,                                +\n"
"--          0.0252687931060791                                +\n"
"--      ],                                                    +\n"
"--      [                                                     +\n"
"--          [                                                 +\n"
"--              [                                             +\n"
"--                  1                                         +\n"
"--              ],                                            +\n"
"--              [                                             +\n"
"--                  [                                         +\n"
"--                      \"_id\",                                +\n"
"--                      \"UInt32\"                              +\n"
"--                  ],                                        +\n"
"--                  [                                         +\n"
"--                      \"content\",                            +\n"
"--                      \"LongText\"                            +\n"
"--                  ],                                        +\n"
"--                  [                                         +\n"
"--                      \"ctid\",                               +\n"
"--                      \"UInt64\"                              +\n"
"--                  ]                                         +\n"
"--              ],                                            +\n"
"--              [                                             +\n"
"--                  1,                                        +\n"
"--                  \"PGroonga (PostgreSQL+Groonga) is great!\",+\n"
"--                  1                                         +\n"
"--              ]                                             +\n"
"--          ]                                                 +\n"
"--      ]                                                     +\n"
"--  ]\n"
"-- (1 row)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:130
msgid ""
"You can also use arguments array style [`pgroonga.command` "
"function](pgroonga-command.html):"
msgstr ""
"コマンドの引数を配列で指定するスタイルで[`pgroonga.command`関数](pgroonga-"
"command.html)使ってもこのケースを防ぐことができます。"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:132
msgid ""
"```sql\n"
"SELECT jsonb_pretty(\n"
"  pgroonga.command('select',\n"
"                   ARRAY[\n"
"                     'table', pgroonga.table_name('pgroonga_memos_index'),\n"
"                     'match_columns', 'content',\n"
"                     'query', pgroonga.query_escape('(PostgreSQL')\n"
"                   ])::jsonb\n"
");\n"
"--                         jsonb_pretty                        \n"
"-- ------------------------------------------------------------\n"
"--  [                                                         +\n"
"--      [                                                     +\n"
"--          0,                                                +\n"
"--          1480433038.482539,                                +\n"
"--          0.0001201629638671875                             +\n"
"--      ],                                                    +\n"
"--      [                                                     +\n"
"--          [                                                 +\n"
"--              [                                             +\n"
"--                  1                                         +\n"
"--              ],                                            +\n"
"--              [                                             +\n"
"--                  [                                         +\n"
"--                      \"_id\",                                +\n"
"--                      \"UInt32\"                              +\n"
"--                  ],                                        +\n"
"--                  [                                         +\n"
"--                      \"content\",                            +\n"
"--                      \"LongText\"                            +\n"
"--                  ],                                        +\n"
"--                  [                                         +\n"
"--                      \"ctid\",                               +\n"
"--                      \"UInt64\"                              +\n"
"--                  ]                                         +\n"
"--              ],                                            +\n"
"--              [                                             +\n"
"--                  1,                                        +\n"
"--                  \"PGroonga (PostgreSQL+Groonga) is great!\",+\n"
"--                  1                                         +\n"
"--              ]                                             +\n"
"--          ]                                                 +\n"
"--      ]                                                     +\n"
"--  ]\n"
"-- (1 row)\n"
"```"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:179
msgid "## See also"
msgstr "## 参考"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:181
msgid "  * [`pgroonga.command` function](pgroonga-command.html)"
msgstr "  * [`pgroonga.command`関数](pgroonga-command.html)"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:183
msgid ""
"  * [`pgroonga.command_escape_value` function](pgroonga-command-escape-"
"value.html)"
msgstr ""
"  * [`pgroonga.command_escape_value`関数](pgroonga-command-escape-value.html)"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:185
msgid "  * [`pgroonga.escape` function](pgroonga-escape.html)"
msgstr "  * [`pgroonga.escape`関数](pgroonga-escape.html)"

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:187
msgid "[query-v2]:../operators/query-v2.html"
msgstr ""

#: ../../../../../v1/reference/functions/pgroonga-query-escape.md:189
msgid "[query-in-v2]:../operators/query-in-v2.html"
msgstr ""
